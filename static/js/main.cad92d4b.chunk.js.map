{"version":3,"sources":["components/logo/favicon.png","components/logo/logo.jsx","components/dialog/confirm.jsx","services/services.jsx","components/serveroptions/sshitem.jsx","components/serveroptions/statusitem.jsx","components/serveroptions/restartitem.jsx","components/serveroptions/linkldapitem.jsx","components/serveroptions/routesitem.jsx","components/serveroptions/serveroptions.jsx","components/header/header.jsx","components/sidebar/telegramtokenitem.jsx","components/sidebar/proxyitem.jsx","components/sidebar/mailitem.jsx","components/sidebar/urimoreconnectionsitem.jsx","components/sidebar/urimorevisiteditem.jsx","components/sidebar/connectionswithoutuseritem.jsx","components/sidebar/usersmultipleipitem.jsx","components/sidebar/usernotifyconnection.jsx","components/sidebar/sidebar.jsx","components/materialtable/customcell.jsx","components/materialtable/customgrouprow.jsx","components/dialog/ldapdialog.jsx","components/content/content.jsx","components/serveritems/serveritem.jsx","components/serveritems/serveritems.jsx","components/serverldapitems/serverldapitem.jsx","components/serverldapitems/serverldapitems.jsx","components/telegramchats/telegramchatitem.jsx","components/telegramchats/telegramchats.jsx","components/graphic/graphic.jsx","components/resume/resumeitem.jsx","components/resume/resume.jsx","components/lockedsources/lockedsource.jsx","components/lockedsources/lockedsources.jsx","components/quotas/quota.jsx","components/quotas/quotas.jsx","components/license/license.jsx","components/login/login.jsx","App.jsx","hooks/useToken.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","root","display","large","width","spacing","height","Logo","props","classes","className","Avatar","alt","src","logo","size","wrapper","margin","position","buttonProgress","color","green","top","left","marginTop","marginLeft","ConfirmDialog","Dialog","aria-labelledby","open","DialogContent","children","DialogActions","style","justifyContent","padding","Button","onClick","handleConfirmClick","variant","button","startIcon","disabled","loading","CircularProgress","handleClose","axiosinstance","require","axios","create","baseURL","process","timeout","interceptors","request","use","headers","tokenString","sessionStorage","getItem","userToken","JSON","parse","token","getToken","getServers","a","post","getServersById","id","getConnectionsData","addServer","host","port","cachepass","updateServer","data","put","updateConfig","getThemePrefers","activateServer","deleteServer","delete","setSSHConnection","sshuser","sshport","sshpass","deleteSSHConnection","statusServer","restartServer","getSourcesLocked","connectionToSite","loadconfig","proxyRegister","deleteProxy","registerBot","bottoken","getBot","registerChat","name","deleteChat","deleteBot","sourceLock","source","sourceUnlock","getUriInfo","uri","registerMail","deleteMail","getQuotas","registerQuota","deleteQuota","linkSource","getSourceByIdentifier","identifier","setDefaultQuota","quotaid","getLdapServers","addLdapServer","linkProxyServer","getSourceLdapInfo","uploadLicenseFile","getEncryptSystemData","deleteLdapServer","login","convertQuotaType","type","converted","getSize","pos","i","toFixed","parseSource","split","isIPAddress","value","test","getClearUri","spliturl","urlready","flexDirection","alignItems","minWidth","typography","marginBottom","rounded","prefersDarkMode","palette","text","secondary","backgroundColor","grey","listText","validator","SSHItem","useState","setLoading","setOpen","server","setServer","username","password","newsshserver","setNewSSHServer","show","msg","error","setError","handleChange","e","preventDefault","target","handleSubmit","length","isEmpty","ignore_whitespace","isPort","toString","Services","_id","then","response","errors","console","log","showMessage","catch","err","handleRemoveClick","loadServer","Fragment","onClose","DialogTitle","Alert","severity","marginRight","undefined","onSubmit","Box","flexGrow","TextField","onChange","label","inputProps","min","max","InputLabelProps","shrink","autoComplete","sizeobando","si","existe","conexiame","Typography","gutterBottom","StatusItem","status","setStatus","loadStatus","fullWidth","maxWidth","component","overflow","textAlign","detail","RestartItem","handleRestartClick","fontSize","LinkLdapItem","ldapserverid","setLdapServerId","ldapservers","setLdapServers","proxyid","ldapid","loadServersData","serverldap","FormControl","InputLabel","htmlFor","Select","native","map","ldapserver","index","RoutesItem","routelockuser","routelockpc","routes","setRoutes","overflowY","defaultValue","rootChip","background","serverIsUp","flex","flexWrap","span","borderRadius","paddingLeft","paddingRight","ServerOptions","React","useMemo","createMuiTheme","primary","light","main","dark","contrastText","paper","default","ThemeProvider","Chip","icon","appBar","breakpoints","up","zIndex","drawer","menuButton","grow","sectionDesktop","marginSmall","Header","subscribe","setSubscribe","AppBar","Toolbar","Hidden","mdDown","implementation","lgUp","smDown","handleRefreshSourcesLock","IconButton","handleDrawerToggle","handlePrefersDarkMode","socket","disconnect","connect","handleSubscriptions","spin","removeItem","setToken","license","company","timeleft","TelegramTokenItem","newtoken","setNewToken","loadConfig","handleRefreshChats","bot","ListItem","ListItemAvatar","ListItemText","ProxyItem","fullScreen","useMediaQuery","down","newproxyserver","setNewProxyServer","isIP","proxy","MailItem","from","to","newmailserver","setNewMailServer","isEmail","mail","tags","placeholder","editable","readOnly","removeOnBackspace","toMailAddress","isValid","trim","small","UriMoreConnectionsItem","uris","setUris","count","setCount","getUriMoreConnections","pcount","tmpuris","tmp","connections","connection","remote","indexOf","push","sources","sort","b","slice","useEffect","isInt","p","bgcolor","UriMoreVisitedItem","getUriMoreVisited","ConnectionsWithoutUserItem","conectionswithoutuser","setConectionsWithoutUser","getConnectionsWithoutUser","tmpconectionswithoutuser","activeconnections","active","conection","UsersMultipleIpItem","users","setUsers","getUsersMultipleIp","tmpusers","ips","filter","user","ip","UserNotifyConnection","sites","newnotify","setNewNotify","toSiteAddress","flexShrink","toolbar","mixins","drawerPaper","borderRight","overflowX","Sidebar","setResponse","handleChangeConfig","config","List","FormControlLabel","control","Switch","checked","mailnotify","botnotify","aria-label","smUp","Drawer","container","anchor","direction","mobileOpen","ModalProps","keepMounted","CustomCell","handleClickCell","columnDef","disableClick","stopPropagation","getStyle","cellStyle","border","rowData","cursor","this","emptyValue","getEmptyValue","render","verticalAlign","icons","Check","ThirdStateCheck","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","cellProps","TableCell","align","defaultProps","CustomGroupRow","rotateIconStyle","isOpen","transform","showResume","speed","forEach","item","bytes","speed_value","Service","colSpan","columns","hidden","options","selection","detailPanel","actions","column","groups","level","groupData","isExpanded","components","GroupRow","getFieldValue","path","onGroupExpandChanged","onRowSelected","onRowClick","onToggleDetailPanel","onTreeExpandChanged","onEditingCanceled","onEditingApproved","hasAnyEditingRow","isTreeData","tableData","editing","EditRow","localization","mode","Row","freeCells","lookup","title","TableRow","handleLdapDialog","handleLinkQuotaClick","handleSourcesLockClick","transition","event","DetailPanel","LdapDialog","ldapdialog","ldapinfo","m","cn","memberOf","group","splitgroup","ActiveBadge","withStyles","badge","boxShadow","animation","content","opacity","Badge","NoActiveBadge","Content","setSource","setLdapDialog","groupdata","locksourcedialog","setLockSourceDialog","quotas","quotadialog","setQuotaDialog","uriinfo","uridialog","setURIDialog","tableIcons","Add","forwardRef","ref","Clear","Delete","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ViewColumn","loadSource","loadQuotas","handleSourcesLock","handleRefreshQuota","field","defaultGroupOrder","substring","Tooltip","processUrl","logtype","blue","red","orange","logType","grouping","customSort","seconds","true","overlap","anchorOrigin","vertical","horizontal","false","sorting","customRow","defaultExpanded","paging","pageSize","pageSizeOptions","usersConnected","actionsColumnIndex","headerStyle","fontWeight","rowStyle","groupedBy","pagination","labelDisplayedRows","labelRowsSelect","nRowsSelected","exportTitle","exportAriaLabel","exportCSVName","exportPDFName","searchTooltip","searchPlaceholder","header","body","emptyDataSourceMessage","filterRow","filterTooltip","tooltip","window","urlInfo","delay","number","types","restore","delayPools","delay_pool","mr","mt","LinearProgress","Math","round","quota","limit","ServerItem","loadServers","handleActivateServerClick","ServerItems","servers","setServers","newserver","setNewServer","serversHidden","setServersHidden","handleDeleteServerClick","showMsg","Grid","xs","sm","Paper","edge","handleRefreshClick","ServerLdapItem","loadLdapServers","ServerLdapItems","dnbase","dnuser","encryption","TelegramChatItem","chat","loadChats","TelegramChats","chats","setChats","newtelegramchat","setNewTelegramchat","teleChatsHidden","setTeleChatsHidden","refreshChats","Graphic","CustomTooltip","payload","graphicheight","ResponsiveContainer","LineChart","parseData","YAxis","hide","XAxis","dataKey","Line","stroke","strokeWidth","listTextprimary","ResumeItem","demo","getText","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","Container","graphicid","Resume","md","usersConnections","usersSize","usersSpeed","subvalue","LockedSource","handleUnlockClick","sourcelock","refreshSourcesLock","lock_from","fromNow","lock_date","LockedSources","sourcesLocked","setSourcesLocked","sourcesLockedHidden","setSourcesLockedHidden","element","loadSourceslock","badgeContent","Quota","isdefault","Quotas","setQuotas","limittype","newquota","setNewQuota","defaulquota","openquotadialog","setOpenQuotaDialog","quotasHidden","setQuotasHidden","handleCloseQuotaDialog","handleSubmitQuotaDialog","Number","unit","pow","refreshQuota","vale","card","cardcontent","bullet","License","setLicense","formLicense","useRef","Card","CardContent","multiline","rows","readonly","formData","FormData","append","files","time","current","reset","handleFileChange","Login","formLogin","setUserName","setPassword","required","library","add","fab","faCheckSquare","faCoffee","faSyncAlt","faCheck","faArrowDown","faArrowUp","socketIOClient","App","useSnackbar","enqueueSnackbar","closeSnackbar","setPrefersDarkMode","grouprow","setMobileOpen","document","setRefreshSourcesLock","setRefreshQuota","setRefreshChats","setItem","stringify","useToken","autoHideDuration","action","key","darktheme","on","CssBaseline","drawerWidth","mdUp","ReactDOM","StrictMode","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.cad92d4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.f3592f4e.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport logo from './favicon.png';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    }\n}));\n\nfunction Logo(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Avatar alt=\"Remy Sharp\" src={logo} className={ props.size === 'large' ? classes.large : ''}/>\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { green } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles({\n    wrapper: {\n        margin: '1rem',\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n});\n\nexport default function ConfirmDialog(props) {\n    const classes = useStyles();\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={props.open}>\n            <DialogContent>\n                {props.children}\n            </DialogContent>\n            <DialogActions style={{ justifyContent: 'center', padding: '0'}}>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={() => { props.handleConfirmClick() }}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        className={classes.button}\n                        startIcon={<ThumbUpAltIcon />}\n                        disabled={props.loading}\n                    >\n                        Confirmar\n                        </Button>\n                    {props.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                </div>\n                <Button\n                    onClick={() => { props.handleClose() }}\n                    variant=\"contained\"\n                    color=\"default\"\n                    size=\"small\"\n                    className={classes.button}\n                    startIcon={<CloseIcon />}\n                >\n                    Cancelar\n                    </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import axios from 'axios';\n\nconst hdate = require('human-date')\n\nconst getToken = () => {\n  const tokenString = sessionStorage.getItem('token');\n  const userToken = JSON.parse(tokenString);\n  return userToken?.token\n};\n\nconst axiosinstance = axios.create({\n  baseURL: process.env.REACT_APP_ENDPOINT,\n  timeout: 30000\n});\n\naxiosinstance.interceptors.request.use(request => {\n  request.headers['x-access-token'] = getToken();\n  return request;\n});\n\n//Server Services\nexport const getServers = async () => {\n  return await axiosinstance.post('/server/list')\n}\n\n//Server Services\nexport const getServersById = async (id) => {\n  return await axiosinstance.post('/server/find', {\n    id: id\n  })\n}\n\nexport const getConnectionsData = async () => {\n  return await axiosinstance.post('/server/getconnectionsdata')\n}\n\nexport const addServer = async (host, port, cachepass) => {\n  return await axiosinstance.post('/server/register',\n    {\n      host: host,\n      port: port,\n      cachepass: cachepass\n    })\n}\n\nexport const updateServer = async (id, data) => {\n  return await axiosinstance.put('/server/update/' + id,\n    data)\n}\n\nexport const updateConfig = async (data) => {\n  return await axiosinstance.put('/updateconfig',\n    data)\n}\n\nexport const getThemePrefers = async () => {\n  return await axiosinstance.post('/getthemeprefers')\n}\n\nexport const activateServer = async (id) => {\n  return await axiosinstance.put('/server/activate/' + id)\n}\n\nexport const deleteServer = async (id) => {\n  return await axiosinstance.delete('/server/delete/' + id)\n}\n\nexport const setSSHConnection = async (id, sshuser, sshport, sshpass) => {\n  return await axiosinstance.put('/server/setsshconnection/' + id,\n    {\n      sshuser: sshuser,\n      sshport: sshport,\n      sshpass: sshpass\n    })\n}\n\nexport const deleteSSHConnection = async (id) => {\n  return await axiosinstance.put('/server/deletesshconnection/' + id)\n}\n\nexport const statusServer = async (id) => {\n  return await axiosinstance.post('/server/status/' + id)\n}\n\nexport const restartServer = async (id) => {\n  return await axiosinstance.post('/server/restart/' + id)\n}\n\nexport const getSourcesLocked = async (id) => {\n  return await axiosinstance.post('/source/getsourceslocked/' + id)\n}\n\nexport const connectionToSite = async (data) => {\n  return await axiosinstance.post('/source/connectiontosite', data)\n}\n\n//Config Services\nexport const loadconfig = async () => {\n  return await axiosinstance.post('/loadconfig')\n}\n\n//Config Services\nexport const proxyRegister = async (data) => {\n  return await axiosinstance.post('/proxy/registerproxy', data)\n}\n\nexport const deleteProxy = async (id) => {\n  return await axiosinstance.delete('/proxy/delete/' + id)\n}\n\n//Bot Services\nexport const registerBot = async (token) => {\n  return await axiosinstance.post('/bot/register', {\n    bottoken: token\n  })\n}\n\nexport const getBot = async () => {\n  return await axiosinstance.post('/bot/getbot')\n}\n\nexport const registerChat = async (name, id) => {\n  return await axiosinstance.put('/bot/registerchat', {\n    id: id,\n    name: name\n  })\n}\n\nexport const deleteChat = async (id) => {\n  return await axiosinstance.put('/bot/deletechat',\n    {\n      id: id\n    })\n}\n\nexport const deleteBot = async (id) => {\n  return await axiosinstance.delete('/bot/delete/' + id)\n}\n\nexport const sourceLock = async (source, host) => {\n  return await axiosinstance.post('/source/sourcelock',\n    {\n      source: source,\n      host: host\n    })\n}\n\nexport const sourceUnlock = async (source, host) => {\n  return await axiosinstance.post('/source/sourceunlock',\n    {\n      source: source,\n      host: host\n    })\n}\n\nexport const getUriInfo = async (uri) => {\n  return await axiosinstance.post('/geturinfo',\n    {\n      uri: uri\n    })\n}\n\nexport const registerMail = async (data) => {\n  return await axiosinstance.post('/mail/register/',\n    data)\n}\n\nexport const deleteMail = async (id) => {\n  return await axiosinstance.delete('/mail/delete/' + id)\n}\n\nexport const getQuotas = async () => {\n  return await axiosinstance.post('/quota/getquotas')\n}\n\nexport const registerQuota = async (data) => {\n  return await axiosinstance.post('/quota/register',\n    data)\n}\n\nexport const deleteQuota = async (id) => {\n  return await axiosinstance.delete('/quota/delete/' + id)\n}\n\nexport const linkSource = async (data) => {\n  return await axiosinstance.post('/quota/linksource', data)\n}\n\nexport const getSourceByIdentifier = async (identifier) => {\n  return await axiosinstance.post('/source/getsource',\n    {\n      identifier: identifier\n    })\n}\n\nexport const setDefaultQuota = async (data) => {\n  return await axiosinstance.put('/quota/setdefault/' + data.quotaid, data)\n}\n\n//Server ldap Services\nexport const getLdapServers = async () => {\n  return await axiosinstance.post('/serverldap/list')\n}\n\nexport const addLdapServer = async (data) => {\n  return await axiosinstance.post('/serverldap/register', data)\n}\n\nexport const linkProxyServer = async (data) => {\n  return await axiosinstance.post('/serverldap/linkproxyserver', data)\n}\n\nexport const getSourceLdapInfo = async (source, host) => {\n  return await axiosinstance.post('/serverldap/getsourceinfo', {\n    source: source,\n    host: host\n  })\n}\n\nexport const uploadLicenseFile = async (data) => {\n  return await axiosinstance.post('/uploadlicensefile', data)\n}\n\nexport const getEncryptSystemData = async () => {\n  return await axiosinstance.post('/getencryptsystemdata')\n}\n\nexport const deleteLdapServer = async (id) => {\n  return await axiosinstance.delete('/serverldap/delete/' + id)\n}\n\nexport const login = async (data) => {\n  return await axiosinstance.post('/login', data)\n}\n\nexport const logout = async () => {\n  return await axiosinstance.post('/logout')\n}\n\nexport const convertQuotaType = (type) => {\n  let converted = ''\n  switch (type) {\n    case 'weekly':\n      converted = 'Semanal'\n      break;\n    case 'daily':\n      converted = 'Diario'\n      break;\n    case 'hourly':\n      converted = 'Cada hora'\n      break;\n    default:\n      converted = 'Mensual'\n      break;\n  }\n  return converted\n}\n\nexport const getSize = (size) => {\n  let mod = 1024;\n  let pos = 0\n  let units = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  for (let i = 0; size > mod; i++) {\n    size /= mod;\n    pos++\n  }\n  return +size.toFixed(2) + units[pos];\n}\n\nexport const getBytes = (size, unit) => {\n  if (unit === \"YB\")\n    return size * Math.pow(1024, 8)\n  if (unit === \"ZB\")\n    return size * Math.pow(1024, 7)\n  if (unit === \"EB\")\n    return size * Math.pow(1024, 6)\n  if (unit === \"PB\")\n    return size * Math.pow(1024, 5)\n  if (unit === \"TB\")\n    return size * Math.pow(1024, 4)\n  if (unit === \"GB\")\n    return size * Math.pow(1024, 3)\n  if (unit === \"MB\")\n    return size * Math.pow(1024, 2)\n  if (unit === \"KB\")\n    return size * 1024\n  else return size\n}\n\nexport const getTime = (time, lang) => {\n  if (time === 0)\n    return lang === 'es' ? 'ahora' : 'now'\n  let timeobj = hdate.relativeTime(time * -1, { returnObject: true })\n  let timelang = ''\n  if (timeobj.years > 0)\n    timelang += lang === 'es' ? timeobj.years + 'a' : timeobj.years + 'y'\n  if (timeobj.days > 0)\n    timelang += ' ' + timeobj.days + 'd'\n  if (timeobj.hours > 0)\n    timelang += ' ' + timeobj.hours + 'h'\n  if (timeobj.minutes > 0)\n    timelang += ' ' + timeobj.minutes + 'm'\n  if (timeobj.seconds > 0)\n    timelang += ' ' + timeobj.seconds + 's'\n  return timelang.trim()\n}\n\n/*export const showNotifyMsg = (title, msg, type) => {\n  let color;\n  let icon;\n\n  switch (type) {\n    case 'error':\n      color = 'red';\n      icon = '<i class=\"fa fa-close\"></i> ';\n      break;\n    case 'success':\n      color = 'green';\n      icon = '<i class=\"fa fa-check\"></i> ';\n      break;\n    case 'warning':\n      color = 'yellow';\n      icon = '<i class=\"fa fa-warning\"></i> ';\n      break;\n    default:\n      color = 'blue';\n      icon = '<i class=\"fa fa-info-circle\"></i> ';\n  }\n\n  new jBox('Notice', {\n    attributes: {\n      x: 'left',\n      y: 'bottom'\n    },\n    color: color,\n    content: msg,\n    title: icon + title,\n    animation: {\n      open: 'slide:bottom',\n      close: 'slide:left'\n    },\n    delayOnHover: true,\n    showCountdown: true\n  });\n}*/\n\nexport const parseSource = (source) => {\n  return source.split('@')[0]\n}\n\nexport const isIPAddress = (value) => {\n  return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value)\n}\n\nexport const extractProxyData = (uri) => {\n  let data = {\n    host: '',\n    port: '',\n    username: '',\n    password: ''\n  }\n  let urisplit = uri.split('//')[1].split('@')\n  if (urisplit[1]) {\n    data.host = urisplit[1].split(':')[0]\n    data.port = urisplit[1].split(':')[1]\n    data.username = urisplit[0].split(':')[0]\n    data.password = urisplit[0].split(':')[1]\n  } else {\n    data.host = urisplit[0].split(':')[0]\n    data.port = urisplit[0].split(':')[1]\n  }\n  return data\n}\n\nexport const getClearUri = (uri) => {\n  let spliturl = uri.split(':');\n  let urlready = null;\n  if (spliturl[0] === 'http' || spliturl[0] === 'https') {\n    let tmpurl = spliturl[1].split('/');\n    urlready = tmpurl[2];\n  } else\n    urlready = spliturl[0];\n\n  return urlready;\n}\n\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    margin: {\n        margin: theme.spacing(0.3),\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function SSHItem(props) {\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [server, setServer] = useState(null);\n\n    const [newsshserver, setNewSSHServer] = useState({\n        port: '22',\n        username: 'root',\n        password: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n\n        setOpen(false);\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        setLoading(false);\n\n        setServer(null)\n\n        setNewSSHServer({\n            port: '22',\n            username: 'root',\n            password: ''\n        })\n\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewSSHServer(newsshserver => ({ ...newsshserver, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (newsshserver.username.length > 0 && validator.isEmpty(newsshserver.username, { ignore_whitespace: true })) {\n            setError(error => ({ ...error, show: true, msg: 'El usuario no es válido' }))\n        } else\n            if (!validator.isPort(newsshserver.port.toString())) {\n                setError(error => ({ ...error, show: true, msg: 'El puerto no es válido' }))\n            } else\n                if (newsshserver.username.length > 0 && validator.isEmpty(newsshserver.password, { ignore_whitespace: true })) {\n                    setError(error => ({ ...error, show: true, msg: 'La contraseña no es válida' }))\n                } else {\n                    if (!loading) {\n                        setLoading(true);\n                    }\n\n                    await Services.setSSHConnection(props.server._id, newsshserver.username, newsshserver.port, newsshserver.password).then((response) => {\n                        setLoading(false);\n                        if (response.data.errors) {\n                            console.log('error', response.data.errors)\n                            setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                        }\n                        else {\n                            props.showMessage('SSH configurado correctamente', 'success')\n                            handleClose()\n                        }\n                    }).catch((err) => {\n                        setLoading(false);\n                        setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                    });\n                }\n    }\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteSSHConnection(props.server._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                props.showMessage('Conexión SSH eliminada correctamente', 'success')\n                handleClose()\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    const loadServer = async () => {\n        await Services.getServersById(props.server._id).then((response) => {\n            if (!response.data.errors) {\n                setServer(response.data)\n            }\n        }).catch((err) => {\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <Button onClick={(e) => { e.preventDefault(); loadServer(); setOpen(true) }} variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.margin}\n            startIcon={<VpnKeyIcon />}>\n            SSH\n        </Button>\n\n        {\n            server === null ?\n                error.show &&\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n                    <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                :\n                server.sshuser === undefined ?\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <form onSubmit={handleSubmit}>\n                            <DialogTitle id=\"form-dialog-title\">Configurar conexión SSH</DialogTitle>\n                            <DialogContent>\n                                {\n                                    error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                }\n\n                                <Box display=\"flex\" style={{ width: '100%' }}>\n                                    <Box flexGrow={1} >\n                                        <TextField\n                                            onChange={handleChange}\n                                            name=\"username\"\n                                            label=\"IP del servidor\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newsshserver.username}\n                                        />\n                                    </Box>\n                                    <Box>\n                                        <TextField\n                                            onChange={handleChange}\n                                            label=\"Puerto\"\n                                            name=\"port\"\n                                            type=\"number\"\n                                            inputProps={{ min: 1, max: 65536 }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newsshserver.port}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box display=\"flex\" style={{ width: '100%', marginTop: '1rem' }}>\n\n                                    <TextField style={{ width: '100%' }}\n                                        onChange={handleChange}\n                                        name=\"password\"\n                                        label=\"Contraseña\"\n                                        type=\"password\"\n                                        autoComplete=\"current-password\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        value={newsshserver.password}\n                                    />\n\n                                </Box>\n                            </DialogContent>\n                            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"small\"\n                                        disabled={loading}\n                                    >\n                                        Aceptar\n                                    </Button>\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </div>\n                                <Button\n                                    onClick={handleClose}\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    sizeobando si existe conexiame={classes.button}\n                                    startIcon={<CloseIcon />}\n                                >\n                                    Cancelar\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                    : <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                        <Typography variant=\"h6\" gutterBottom> Ya existe una conexión SSH configurada desea eliminarla de forma permanente:</Typography>\n\n                        <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>Tenga en cuenta que podría dejar de funcionar las cuotas de usuario, los bloqueos automáticos y por medio de la web, no podrá reiniciar el servidor ni ver su estado.</Alert>\n\n                    </ConfirmDialog>\n        }\n\n\n    </React.Fragment >);\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    margin: {\n        margin: theme.spacing(0.3),\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function StatusItem(props) {\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [status, setStatus] = useState(null);\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        setLoading(false);\n        setStatus(null)\n    };\n\n    const loadStatus = async () => {\n        await Services.statusServer(props.server._id).then((response) => {\n            console.log(response.data)\n            if (response.data.errors) {\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            } else {\n                setStatus(response.data)\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <Button onClick={(e) => { e.preventDefault(); loadStatus(); setOpen(true) }} variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.margin} disabled={props.server.sshuser === null ? true : false}\n            startIcon={<AssignmentTurnedInIcon />}>\n            Estado\n        </Button>\n\n        {\n            status === null ?\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    {\n                        error.show ?\n                            <React.Fragment>\n                                <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n                                <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n                                <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                    <div className={classes.wrapper}>\n                                        <Button\n                                            onClick={handleClose}\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            size=\"small\"\n                                            className={classes.button}\n                                            startIcon={<ThumbUpAltIcon />}\n                                            disabled={loading}\n                                        >\n                                            Aceptar\n                                        </Button>\n                                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                    </div>\n                                </DialogActions>\n                            </React.Fragment>\n                            :\n                            <DialogContent>\n                                <div className={classes.root}>\n                                    <CircularProgress color=\"secondary\" />\n                                    <Typography variant=\"h6\">Comprobando estado del servidor</Typography>\n                                </div>\n                            </DialogContent>\n\n                    }\n                </Dialog>\n                :\n\n                <Dialog fullWidth={true} maxWidth=\"lg\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Detalles del estado del servidor</DialogTitle>\n                    <DialogContent>\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n\n                        <Box component=\"span\">\n                            <Box overflow=\"auto\" style={{ textAlign: 'left' }}>\n                                <pre style={{ maxWidth: '20rem' }}>{status.detail}</pre>\n                            </Box>\n                        </Box>\n\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n        }\n\n\n    </React.Fragment>);\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    margin: {\n        margin: theme.spacing(0.3),\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    }\n}));\n\nexport default function RestartItem(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [server, setServer] = useState(null);\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleRestartClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.restartServer(props.server._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor reiniciado correctamente', 'success')\n                handleClose()\n            }\n        }).catch((error) => {\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n            handleClose()\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n        setServer(null);\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const loadServer = async () => {\n        await Services.getServersById(props.server._id).then((response) => {\n            console.log(response.data)\n            if (!response.data.errors) {\n                setServer(response.data)\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n\n        <Button onClick={(e) => { e.preventDefault(); loadServer(); setOpen(true) }} variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.margin} disabled={props.server.sshuser === null ? true : false}\n            startIcon={<RefreshIcon />}>\n            Reiniciar\n        </Button>\n\n        {\n            server == null ?\n\n                error.show &&\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n                    <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                                    </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                :\n                <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRestartClick} >\n                    <Typography variant=\"h6\" gutterBottom> Está a punto de reiniciar el servidor:</Typography>\n                    <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                        <Avatar>\n                            <DesktopWindowsIcon fontSize=\"medium\" />\n                        </Avatar>\n                        <Typography variant=\"h6\" gutterBottom className={classes.typography}>\n                            {props.server.host}\n                        </Typography>\n                    </Box>\n                </ConfirmDialog>\n        }\n\n\n    </React.Fragment>);\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    margin: {\n        margin: theme.spacing(0.3),\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function LinkLdapItem(props) {\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [server, setServer] = useState(null);\n    const [ldapserverid, setLdapServerId] = useState('noldapserver')\n    const [ldapservers, setLdapServers] = useState([])\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n\n        setOpen(false);\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        setLoading(false);\n\n        setServer(null)\n\n        setLdapServerId('noldapserver')\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setLdapServerId(e.target.value);\n    }\n\n    const handleSubmit = async () => {\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (!loading) {\n            setLoading(true);\n        }\n\n        await Services.linkProxyServer({ proxyid: server._id, ldapid: ldapserverid }).then((response) => {\n            setLoading(false);\n\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                if (response.data.status !== \"nothingtodo\") {\n                    props.showMessage(response.data.msg, 'success')\n                    handleClose()\n                } else\n                    setError(error => ({ ...error, show: true, msg: 'Seleccione un servidor LDAP de la lista' }))\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.'}))\n        });\n    }\n\n    const loadServersData = async () => {\n        await Services.getServersById(props.server._id).then((response) => {\n            if (!response.data.errors) {\n                setServer(response.data)\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n        await Services.getLdapServers().then((response) => {\n            if (!response.data.errors) {\n                setLdapServers(response.data)\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <Button onClick={(e) => { e.preventDefault(); loadServersData(); setOpen(true) }} variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.margin}\n            startIcon={<StorageIcon />}>\n            LDAP\n        </Button>\n\n        {\n            server == null ?\n                error.show &&\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n                    <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                :\n                <Dialog fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={handleSubmit}>\n                        <DialogTitle id=\"form-dialog-title\">Vincular a servidor LDAP</DialogTitle>\n                        <DialogContent>\n\n                            {\n                                error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                            }\n\n                            {\n                                server.serverldap !== undefined && !server.errors ?\n                                    <Alert variant=\"outlined\" severity=\"warning\" style={{ marginBottom: '1rem' }}><em>Este servidor proxy esta vinculado al servidor LDAP <b>{server.serverldap.host}</b>. Seleccione la opción \"Sin servidor ldap vinculado\" si lo que desea es eliminar dicho vinculo.</em></Alert>\n                                    : ''\n                            }\n\n                            <Box style={{ width: '100%', marginTop: server !== null && server.serverldap !== undefined ? '2rem' : '1rem' }}>\n                                <FormControl size=\"small\" variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"set-ldap-server-link\">Servidores LDAP</InputLabel>\n                                    <Select style={{ width: '100%' }}\n                                        onChange={handleChange}\n                                        native\n                                        label=\"Servidores LDAP\"\n                                        inputProps={{\n                                            name: 'ldap-server-link',\n                                            id: 'set-ldap-server-link',\n                                        }}\n                                    >\n                                        <option value='noldapserver'>Sin servidor ldap vinculado</option>\n                                        {\n                                            ldapservers.map((ldapserver, index) => {\n                                                return <option value={ldapserver._id}>{ldapserver.host}</option>\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            </Box>\n\n                        </DialogContent>\n                        <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                            <div className={classes.wrapper}>\n                                <Button\n                                    onClick={handleSubmit}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<ThumbUpAltIcon />}\n                                    disabled={loading}\n                                >\n                                    Aceptar\n                        </Button>\n                                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            </div>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"default\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<CloseIcon />}\n                            >\n                                Cancelar\n                        </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n        }\n\n\n    </React.Fragment >);\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    margin: {\n        margin: theme.spacing(0.3),\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function RoutesItem(props) {\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [server, setServer] = useState(null);\n    const [routes, setRoutes] = useState({\n        routelockuser: '',\n        routelockpc: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n\n        setOpen(false);\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        setLoading(false);\n\n        setServer(null)\n\n        setRoutes({\n            routelockuser: '',\n            routelockpc: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setRoutes(routes => ({ ...routes, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (!loading) {\n            setLoading(true);\n        }\n\n        await Services.updateServer(props.server._id, { routelockuser: routes.routelockuser, routelockpc: routes.routelockpc }).then((response) => {\n            setLoading(false);\n\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                props.showMessage('Rutas de bloqueo registradas correctamente!', 'success')\n                handleClose()\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        });\n    }\n\n    const loadServer = async () => {\n        await Services.getServersById(props.server._id).then((response) => {\n            if (!response.data.errors) {\n                setServer(response.data)\n                setRoutes({\n                    routelockuser: response.data.routelockuser ? response.data.routelockuser : '',\n                    routelockpc: response.data.routelockpc ? response.data.routelockpc : ''\n                })\n            }\n        }).catch((err) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <Button onClick={(e) => { e.preventDefault(); loadServer(); setOpen(true) }} variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.margin}\n            startIcon={<TimelineIcon />}>\n            Rutas\n        </Button>\n\n        {\n            server == null ?\n                error.show &&\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n                    <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                :\n                <Dialog fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={handleSubmit}>\n                        <DialogTitle id=\"form-dialog-title\">Rutas de bloqueo</DialogTitle>\n                        <DialogContent style={{ overflowY: 'inherit' }}>\n\n                            {\n                                error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                            }\n\n                            <Box style={{ width: '100%' }}>\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleChange}\n                                    name=\"routelockuser\"\n                                    label=\"Ruta de bloqueo para usuarios\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    defaultValue={server.routelockuser ? server.routelockuser : ''}\n                                />\n                            </Box>\n                            <Box style={{ width: '100%' }}>\n                                <TextField style={{ width: '100%', marginTop: '1rem' }}\n                                    onChange={handleChange}\n                                    name=\"routelockpc\"\n                                    label=\"Ruta de bloqueo para pc\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    defaultValue={server.routelockpc ? server.routelockpc : ''}\n                                />\n                            </Box>\n\n                        </DialogContent>\n                        <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                            <div className={classes.wrapper}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<ThumbUpAltIcon />}\n                                    disabled={loading}\n                                >\n                                    Aceptar\n                                </Button>\n                                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            </div>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"default\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<CloseIcon />}\n                            >\n                                Cancelar\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n        }\n\n\n    </React.Fragment >);\n}\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport SSHItem from \"./sshitem\"\nimport StatusItem from \"./statusitem\"\nimport RestartItem from \"./restartitem\"\nimport LinkLdapItem from \"./linkldapitem\"\nimport RoutesItem from \"./routesitem\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst useStyles = makeStyles((theme) => ({\n  rootChip: props => ({\n    background: props.serverIsUp ? '#43A047' : '#dc3545',\n    marginRight: '2px'\n  }),\n  margin: {\n    margin: theme.spacing(0.3),\n  },\n  flex: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  server: {\n    marginRight: theme.spacing(1),\n    fontSize: '20px',\n  },\n  span: props => ({\n    color: '#FFFFFF',\n    background: props.serverIsUp ? '#43A047' : '#dc3545',\n    borderRadius: '2rem',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginRight: '5px',\n  })\n}));\n\nexport default function ServerOptions(props) {\n  const classes = useStyles(props);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: props.prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            light: '#757ce8',\n            main: '#dc3545', //'#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n          },\n          secondary: {\n            light: '#ff7961', //focus\n            main: '#dc3545', //background\n            dark: '#ba000d', //hover\n            contrastText: '#fff', // color\n          },\n          text: {\n            secondary: '#9FA2A5'\n          },\n          background: {\n            paper: props.prefersDarkMode ? '#343A40' : '#fff',\n            default: props.prefersDarkMode ? '#212529' : '#fafafa',\n          }\n        },\n      }),\n    [props.prefersDarkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      {\n        props.server.host !== undefined ?\n          <div className={classes.flex}>\n            <Chip\n              classes={{\n                root: classes.rootChip\n              }}\n              label={\n                props.serverIsUp ?\n                  <FontAwesomeIcon icon=\"arrow-up\" size='sm' />\n                  :\n                  <FontAwesomeIcon icon=\"arrow-down\" size='sm' />\n              } style={{ background: \"success\" }} />\n\n            <Typography variant='h5' style={{ marginRight: '5px' }}>{props.server.host}</Typography>\n\n            <div className={classes.flex}>\n              <SSHItem server={props.server} showMessage={props.showMessage} />\n\n              <RestartItem server={props.server} showMessage={props.showMessage} />\n\n              <StatusItem server={props.server} showMessage={props.showMessage} />\n\n              <RoutesItem server={props.server} showMessage={props.showMessage} />\n\n              <LinkLdapItem server={props.server} showMessage={props.showMessage} />\n\n            </div>\n          </div>\n          : \"\"\n      }\n    </ThemeProvider>\n  )\n}","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Alert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Logo from '../logo/logo'\nimport ServerOptions from '../serveroptions/serveroptions'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up('lg')]: {\n      width: `100%`,//calc(100% - ${drawerWidth}px)\n      marginLeft: 230,\n    },\n    zIndex: theme.zIndex.drawer + 1,\n    boxShadow: 'none'\n  },\n  menuButton: {\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    }\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  sectionDesktop: {\n    display: 'flex',\n  },\n  margin: {\n    marginLeft: '11.1rem'\n  },\n  marginSmall: {\n    marginLeft: '3rem'\n  }\n}))\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: props.prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            light: '#757ce8',\n            main: '#dc3545', //'#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n          },\n          secondary: {\n            light: '#ff7961', //focus\n            main: '#dc3545', //background\n            dark: '#ba000d', //hover\n            contrastText: '#fff', // color\n          },\n          text: {\n            secondary: '#9FA2A5'\n          },\n          background: {\n            paper: props.prefersDarkMode ? '#212529' : '#e9ecef',\n            default: props.prefersDarkMode ? '#212529' : '#fafafa'\n          }\n        },\n      }),\n    [props.prefersDarkMode],\n  );\n\n  const logout = () => {\n    sessionStorage.removeItem('token');\n    props.setToken('')\n  }\n\n  const [subscribe, setSubscribe] = useState(true)\n  const [open, setOpen] = useState(false)\n  const [error, setError] = useState({\n    show: false,\n    type: 'error',\n    msg: ''\n  });\n\n  const handleChange = (e) => {\n    e.preventDefault()\n    props.handlePrefersDarkMode()\n  };\n\n  const handleSubscriptions = (e) => {\n    e.preventDefault()\n    if (subscribe) {\n      props.socket.disconnect()\n    } else {\n      props.socket.connect()\n    }\n    setSubscribe(!subscribe)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setError({\n      show: false,\n      type: 'error',\n      msg: ''\n    })\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar color=\"inherit\" position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Logo></Logo>\n          <Hidden mdDown implementation=\"css\">\n            <div className={classes.margin}>\n            </div>\n          </Hidden>\n          <Hidden lgUp implementation=\"css\">\n            <div className={classes.marginSmall}>\n            </div>\n          </Hidden>\n          <Hidden smDown implementation=\"css\">\n            {\n              props.server !== undefined ? <ServerOptions handleRefreshSourcesLock={props.handleRefreshSourcesLock} showMessage={props.showMessage} server={props.server} serverIsUp={props.serverIsUp} prefersDarkMode={props.prefersDarkMode} /> : ''\n            }\n          </Hidden>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              color=\"inherit\"\n              onClick={props.handleDrawerToggle}\n              className={classes.menuButton}>\n              <MenuIcon />\n            </IconButton>\n\n            <IconButton color=\"inherit\"\n              onClick={(e) => { handleChange(e) }}\n            >\n              <Brightness6Icon icon=\"sync-alt\" />\n            </IconButton>\n\n            <IconButton color=\"inherit\"\n              onClick={(e) => { handleSubscriptions(e) }}\n            >\n              {\n                subscribe ?\n                  <FontAwesomeIcon icon=\"sync-alt\" size='sm' spin />\n                  :\n                  <FontAwesomeIcon icon=\"sync-alt\" size='sm' />\n              }\n            </IconButton>\n\n            <IconButton color=\"inherit\"\n              onClick={(e) => { setOpen(!open) }}>\n              <InfoIcon />\n            </IconButton>\n\n            <IconButton color=\"inherit\"\n              onClick={logout}>\n              <ExitToAppIcon />\n            </IconButton> \n          </div>\n\n\n        </Toolbar>\n      </AppBar>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogContent style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n          <Box display='flex' flexDirection='column' alignItems='center'>\n            <Logo size='large'></Logo>\n\n            <Typography variant=\"h4\">SQD</Typography>\n\n            <Typography >Sistema para la gestión y monitorización de squid</Typography>\n\n            <Typography variant=\"h6\">Versión 1.0.0</Typography>\n\n            {\n              error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n            }\n\n            {\n              props.license && <Alert variant=\"outlined\" severity='success' style={{ marginTop: '1rem' }}> Licencia para {props.license.company} válida por {props.license.timeleft === 1 ? '1 día restante' : props.license.timeleft + ' días restantes'}</Alert>\n            }\n\n            <small style={{ marginTop: '1.2rem' }}>Copyright &copy; Todos los derechos reservados </small>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n  )\n}","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function TelegramTokenItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [newtoken, setNewToken] = useState('')\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setNewToken('')\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewToken(e.target.value)\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (validator.isEmpty(newtoken, { ignore_whitespace: true })) {\n            setError(error => ({ ...error, show: true, msg: 'El token no es válido' }))\n        } else {\n            if (!loading) {\n                setLoading(true);\n            }\n\n            await Services.registerBot(newtoken).then((response) => {\n                setLoading(false);\n                if (response.data.errors) {\n                    console.log('error', response.data.errors)\n                    setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                }\n                else {\n                    props.showMessage('Bot registrado correctamente', 'success')\n                    handleClose()\n                    props.loadConfig();\n                    props.handleRefreshChats()\n\n                }\n            }).catch((error) => {\n                setLoading(false);\n                setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n            });\n        }\n    }\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteBot(props.bot._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                setLoading(false);\n                setNewToken('')\n                setError({\n                    show: false,\n                    type: 'error',\n                    msg: ''\n                })\n                props.showMessage('Bot eliminado correctamente', 'success')\n                props.loadConfig();\n                props.handleRefreshChats()\n            }\n        }).catch((error) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <ListItem onClick={(e) => { e.preventDefault(e); setOpen(true) }} button>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <ChatOutlinedIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Token SQD-bot\" className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                props.bot === null ?\n                    <Dialog fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <form onSubmit={handleSubmit}>\n                            <DialogTitle id=\"form-dialog-title\">Token para SQD-bot</DialogTitle>\n                            <DialogContent>\n                                {\n                                    error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                }\n                                <Box style={{ width: '100%' }}>\n                                    <TextField style={{ width: '100%' }}\n                                        onChange={handleChange}\n                                        id=\"telegramitem-token\"\n                                        name=\"token\"\n                                        label=\"Token\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        value={newtoken}\n                                    />\n                                </Box>\n                            </DialogContent>\n                            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<ThumbUpAltIcon />}\n                                        disabled={loading}\n                                    >\n                                        Aceptar\n                                    </Button>\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </div>\n                                <Button\n                                    onClick={handleClose}\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<CloseIcon />}\n                                >\n                                    Cancelar\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                    : <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                        <Typography variant=\"h6\" gutterBottom> Ya existe un token registrado en el sistema. Si desea añadir uno nuevo por favor confirme para eliminar el token actual:</Typography>\n                        <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                            <Typography gutterBottom className={classes.typography}>\n                                <b> {props.bot.token} </b>\n                            </Typography>\n                        </Box>\n                    </ConfirmDialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function ProxyItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [newproxyserver, setNewProxyServer] = useState({\n        host: '',\n        port: '3128',\n        username: '',\n        password: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setNewProxyServer({\n            host: '',\n            port: '3128',\n            username: '',\n            password: ''\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewProxyServer(newproxyserver => ({ ...newproxyserver, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (!validator.isIP(newproxyserver.host)) {\n            setError(error => ({ ...error, show: true, msg: 'La dirección ip del servidor no es válida' }))\n        } else\n            if (!validator.isPort(newproxyserver.port.toString())) {\n                setError(error => ({ ...error, show: true, msg: 'El puerto no es válido' }))\n            } else\n                if (newproxyserver.username.length > 0 && validator.isEmpty(newproxyserver.username, { ignore_whitespace: true })) {\n                    setError(error => ({ ...error, show: true, msg: 'El usuario no es válido' }))\n                } else\n                    if (newproxyserver.username.length > 0 && validator.isEmpty(newproxyserver.password, { ignore_whitespace: true })) {\n                        setError(error => ({ ...error, show: true, msg: 'La contraseña no es válida' }))\n                    } else {\n                        if (!loading) {\n                            setLoading(true);\n                        }\n\n                        await Services.proxyRegister({\n                            host: newproxyserver.host,\n                            port: newproxyserver.port,\n                            username: newproxyserver.username,\n                            password: newproxyserver.password\n                        }).then((response) => {\n                            setLoading(false);\n                            if (response.data.errors) {\n                                console.log('error', response.data.errors)\n                                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                            }\n                            else {\n                                props.showMessage('Proxy registrado correctamente', 'success')\n                                handleClose()\n                                props.loadConfig();\n                            }\n                        }).catch((error) => {\n                            setLoading(false);\n                            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                        });\n                    }\n    }\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteProxy(props.proxy._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                handleClose()\n                props.showMessage('Proxy eliminado correctamente', 'success')\n                props.loadConfig();\n            }\n        }).catch((error) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <ListItem onClick={(e) => { e.preventDefault(e); setOpen(true) }} button>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <AccountTreeOutlinedIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Proxy\" className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                props.proxy === null ?\n                    <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <form onSubmit={handleSubmit}>\n                            <DialogTitle id=\"form-dialog-title\">Configurar proxy</DialogTitle>\n                            <DialogContent>\n                                {\n                                    error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                }\n\n                                <Box display=\"flex\" style={{ width: '100%' }}>\n                                    <Box flexGrow={1} style={{ width: '100%' }}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"serverproxy-host\"\n                                            name=\"host\"\n                                            label=\"IP del servidor\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newproxyserver.host}\n                                        />\n                                    </Box>\n                                    <Box>\n                                        <TextField\n                                            onChange={handleChange}\n                                            id=\"serverproxy-port\"\n                                            label=\"Puerto\"\n                                            name=\"port\"\n                                            type=\"number\"\n                                            defaultValue=\"3128\"\n                                            inputProps={{ min: 1, max: 65536 }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newproxyserver.port}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box display=\"flex\" style={{ width: '100%', marginTop: '1rem', justifyContent: 'center' }}>\n                                    <small>Campos opcionales</small>\n                                </Box>\n                                <Box display=\"flex\" style={{ width: '100%', marginTop: '1rem' }}>\n                                    <Box flexGrow={1}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"serverproxy-username\"\n                                            name=\"username\"\n                                            label=\"Usuario\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newproxyserver.username}\n                                        />\n                                    </Box>\n                                    <Box >\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"serverproxy-password\"\n                                            name=\"password\"\n                                            label=\"Contraseña\"\n                                            type=\"password\"\n                                            autoComplete=\"current-password\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newproxyserver.password}\n                                        />\n                                    </Box>\n                                </Box>\n\n\n                            </DialogContent>\n                            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<ThumbUpAltIcon />}\n                                        disabled={loading}\n                                    >\n                                        Aceptar\n                            </Button>\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </div>\n                                <Button\n                                    onClick={handleClose}\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<CloseIcon />}\n                                >\n                                    Cancelar\n                        </Button>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                    : <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                        <Typography variant=\"h6\" gutterBottom> Ya existe un proxy registrado desea eliminarlo de forma permanente:</Typography>\n\n                        <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>Tenga en cuenta que si su conexión es a travez de este proxy el bot podría dejar de funcionar al igual que no se podrá calcular el progreso de las descargas</Alert>\n\n                        <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                            <Typography variant=\"h6\" gutterBottom className={classes.typography}>\n                                {props.proxy.uri /*(Services.extractProxyData(props.proxy.uri)).host*/}\n                            </Typography>\n                        </Box>\n                    </ConfirmDialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function MailItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [newmailserver, setNewMailServer] = useState({\n        host: '',\n        port: '25',\n        from: '',\n        to: [],\n        username: '',\n        password: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setNewMailServer({\n            host: '',\n            port: '25',\n            from: '',\n            to: [],\n            username: '',\n            password: ''\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewMailServer(newmailserver => ({ ...newmailserver, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (!validator.isIP(newmailserver.host)) {\n            setError(error => ({ ...error, show: true, msg: 'La dirección ip del servidor no es válida' }))\n        } else\n            if (!validator.isPort(newmailserver.port.toString())) {\n                setError(error => ({ ...error, show: true, msg: 'El puerto no es válido' }))\n            } else\n                if (!validator.isEmail(newmailserver.from)) {\n                    setError(error => ({ ...error, show: true, msg: 'La dirección de envío no es válida' }))\n                } else\n                    if (newmailserver.to.length === 0) {\n                        setError(error => ({ ...error, show: true, msg: 'Por favor especifique alguna dirección de destino' }))\n                    } else\n                        if (newmailserver.username.length > 0 && validator.isEmpty(newmailserver.username, { ignore_whitespace: true })) {\n                            setError(error => ({ ...error, show: true, msg: 'El usuario no es válido' }))\n                        } else\n                            if (newmailserver.username.length > 0 && validator.isEmpty(newmailserver.password, { ignore_whitespace: true })) {\n                                setError(error => ({ ...error, show: true, msg: 'La contraseña no es válida' }))\n                            } else {\n                                if (!loading) {\n                                    setLoading(true);\n                                }\n\n                                await Services.registerMail({\n                                    from: newmailserver.from,\n                                    host: newmailserver.host,\n                                    port: newmailserver.port,\n                                    username: newmailserver.username,\n                                    password: newmailserver.password,\n                                    to: newmailserver.to\n                                }).then((response) => {\n                                    setLoading(false);\n                                    if (response.data.errors) {\n                                        console.log('error', response.data.errors)\n                                        setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                                    }\n                                    else {\n                                        props.showMessage('Correo configurado correctamente', 'success')\n                                        handleClose()\n                                        props.loadConfig();\n                                    }\n                                }).catch((error) => {\n                                    setLoading(false);\n                                    setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                                });\n                            }\n    }\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteMail(props.mail._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n            else {\n                handleClose()\n                props.showMessage('Correo eliminado correctamente', 'success')\n                props.loadConfig();\n            }\n        }).catch((error) => {\n            setLoading(false);\n            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        })\n    }\n\n    return (<React.Fragment>\n        <ListItem onClick={(e) => { e.preventDefault(e); setOpen(true) }} button>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <MailOutlineOutlinedIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Correo\" className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                props.mail === null ?\n                    <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <form onSubmit={handleSubmit}>\n                            <DialogTitle id=\"form-dialog-title\">Configurar correo</DialogTitle>\n                            <DialogContent>\n                                {\n                                    error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                }\n\n                                <Box display=\"flex\" style={{ width: '100%' }}>\n                                    <Box flexGrow={1} style={{ width: '100%' }}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"servermail-host\"\n                                            name=\"host\"\n                                            label=\"IP del servidor\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newmailserver.host}\n                                        />\n                                    </Box>\n                                    <Box>\n                                        <TextField\n                                            onChange={handleChange}\n                                            id=\"servermail-port\"\n                                            label=\"Puerto\"\n                                            name=\"port\"\n                                            type=\"number\"\n                                            defaultValue=\"25\"\n                                            inputProps={{ min: 1, max: 65536 }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newmailserver.port}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                    <TextField style={{ width: '100%' }}\n                                        onChange={handleChange}\n                                        id=\"servermail-from\"\n                                        name=\"from\"\n                                        label=\"Dirección de envío\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        value={newmailserver.from}\n                                    />\n                                </Box>\n                                <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                    {/*<TextField style={{ width: '100%' }}\n                                        onChange={handleChange}\n                                        id=\"servermail-to\"\n                                        name=\"to\"\n                                        label=\"Direcciones destino\"\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        placeholder=\"Separadas por coma (,)\"\n                                        value={newmailserver.to}\n                                        />*/}\n                                    <ReactTagInput\n                                        tags={newmailserver.to}\n                                        name=\"to\"\n                                        placeholder=\"Direcciones destino. Precione enter al escribir\"\n                                        editable={true}\n                                        readOnly={false}\n                                        removeOnBackspace={true}\n                                        onChange={(toMailAddress) => { setNewMailServer(newmailserver => ({ ...newmailserver, to: toMailAddress }));/*setTags(newTags)*/ }}\n                                        validator={(value) => {\n\n                                            let isValid = true\n                                            if (!validator.isEmail(validator.trim(value))) {\n                                                isValid = false\n                                                setError(error => ({ ...error, show: true, msg: 'La dirección de correo es inválida' }))\n                                            }\n                                            newmailserver.to.map((mail) => {\n                                                if (mail === value) {\n                                                    isValid = false\n                                                    setError(error => ({ ...error, show: true, msg: 'La dirección de correo ya está agregada' }))\n                                                }\n                                                return mail\n                                            })\n                                            if (isValid) {\n                                                setError(error => ({ ...error, show: false, msg: '' }))\n                                            }\n                                            return isValid;\n\n                                        }}\n                                    />\n                                </Box>\n                                <Box display=\"flex\" style={{ width: '100%', marginTop: '1rem', justifyContent: 'center' }}>\n                                    <small>Campos opcionales</small>\n                                </Box>\n                                <Box display=\"flex\" style={{ width: '100%', marginTop: '1rem' }}>\n                                    <Box flexGrow={1}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"servermail-username\"\n                                            name=\"username\"\n                                            label=\"Usuario\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newmailserver.username}\n                                        />\n                                    </Box>\n                                    <Box >\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"servermail-password\"\n                                            name=\"password\"\n                                            label=\"Contraseña\"\n                                            type=\"password\"\n                                            autoComplete=\"current-password\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newmailserver.password}\n                                        />\n                                    </Box>\n                                </Box>\n\n\n                            </DialogContent>\n                            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<ThumbUpAltIcon />}\n                                        disabled={loading}\n                                    >\n                                        Aceptar\n                                    </Button>\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </div>\n                                <Button\n                                    onClick={handleClose}\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<CloseIcon />}\n                                >\n                                    Cancelar\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                    : <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                        <Typography variant=\"h6\" gutterBottom> Ya existe un correo registrado desea eliminarlo de forma permanente?</Typography>\n\n                        <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                            <Avatar>\n                                <DesktopWindowsIcon fontSize=\"medium\" />\n                            </Avatar>\n                            <Typography variant=\"h6\" gutterBottom className={classes.typography}>\n                                {props.mail.host}\n                            </Typography>\n                        </Box>\n                    </ConfirmDialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function UriMoreConnectionsItem(props) {\n\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [uris, setUris] = useState([])\n    const [count, setCount] = useState(5)\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setUris([])\n\n        setCount(5)\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleCountChange = (e) => {\n        e.preventDefault()\n        if (!validator.isInt(e.target.value.toString()) && e.target.value < 0) {\n            setError(error => ({ ...error, show: true, msg: 'La cantidad no es válida' }))\n        } else {\n            setCount(e.target.value)\n            getUriMoreConnections(e.target.value)\n        }\n    }\n\n    const getUriMoreConnections = (pcount) => {\n        let tmpuris = []\n        let tmp = []\n        props.connections.map((connection) => {\n            let source = connection.username ===  '-' ? connection.remote : connection.username\n            let uri = Services.getClearUri(connection.uri)\n            if (tmp.indexOf(uri) ===  -1) {\n                tmp.push(uri)\n                tmpuris.push({\n                    uri: uri,\n                    sources: [source],\n                    count: 1\n                })\n            } else {\n                tmpuris[tmp.indexOf(uri)].count++\n                if (tmpuris[tmp.indexOf(uri)].sources.indexOf(source) ===  -1) {\n                    tmpuris[tmp.indexOf(uri)].sources.push(source)\n                }\n            }\n            return connection\n        })\n\n        tmpuris.sort(((a, b) => b.count - a.count));\n\n        setUris(tmpuris.slice(0, pcount));\n    }\n\n    useEffect(() => {\n        const getUriMoreConnections = (pcount) => {\n            let tmpuris = []\n            let tmp = []\n            props.connections.map((connection) => {\n                let source = connection.username ===  '-' ? connection.remote : connection.username\n                let uri = Services.getClearUri(connection.uri)\n                if (tmp.indexOf(uri) ===  -1) {\n                    tmp.push(uri)\n                    tmpuris.push({\n                        uri: uri,\n                        sources: [source],\n                        count: 1\n                    })\n                } else {\n                    tmpuris[tmp.indexOf(uri)].count++\n                    if (tmpuris[tmp.indexOf(uri)].sources.indexOf(source) ===  -1) {\n                        tmpuris[tmp.indexOf(uri)].sources.push(source)\n                    }\n                }\n                return connection\n            })\n    \n            tmpuris.sort(((a, b) => b.count - a.count));\n    \n            setUris(tmpuris.slice(0, pcount));\n        }\n        getUriMoreConnections(count)\n    }, [props.connections, count]);\n\n    return (<React.Fragment>\n        <ListItem button onClick={(e) => { e.preventDefault(e); getUriMoreConnections(count); setOpen(true) }}>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <AssignmentIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary='URI con más conexiones' className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">URI con más conexiones</DialogTitle>\n                    <DialogContent>\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleCountChange}\n                                    label=\"Cantidad a mostrar\"\n                                    type=\"number\"\n                                    inputProps={{ min: 1 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={count}\n                                />\n                            </Box>\n                        </Box>\n\n                        {\n                            uris.length > 0 ?\n                                uris.map((uri) => {\n                                    return (<Box display=\"flex\" flexDirection='column'>\n                                        <Box display=\"flex\" alignItems=\"center\" p={0.2} bgcolor=\"background.grouprow\" style={{ borderRadius: '4px' }}>\n                                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                                                <Avatar>\n                                                    <PersonIcon />\n                                                </Avatar>\n                                                <Typography variant=\"h6\" style={{ marginLeft: '0.5rem' }}>\n                                                    <b>{uri.uri}</b>\n                                                </Typography>\n                                            </Box>\n                                            <small className={classes.small}><em style={{ margin: '5px' }}>{uri.count}</em></small>\n                                        </Box>\n                                        <Box display=\"flex\" flexDirection='column' style={{ textAlign: 'left', marginLeft: '3rem' }}>\n                                            {\n                                                uri.sources.map((source, index) => {\n                                                    return (<Typography>\n                                                        { Services.parseSource(source)}\n                                                    </Typography>)\n                                                })\n                                            }\n                                        </Box>\n                                    </Box>)\n                                }) : <Typography>\n                                    En estos momentos no existe ninguna uri\n                            </Typography>\n                        }\n\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={(e) => { handleClose() }}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function UriMoreVisitedItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [uris, setUris] = useState([])\n    const [count, setCount] = useState(5)\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setUris([])\n\n        setCount(5)\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleCountChange = (e) => {\n        e.preventDefault()\n        if (!validator.isInt(e.target.value.toString()) && e.target.value < 0) {\n            setError(error => ({ ...error, show: true, msg: 'La cantidad no es válida' }))\n        } else {\n            setCount(e.target.value)\n            getUriMoreVisited(e.target.value)\n        }\n    }\n\n    const getUriMoreVisited = (pcount) => {\n        let tmpuris = []\n        let tmp = []\n        props.connections.map((connection) => {\n            let source = connection.username ===  '-' ? connection.remote : connection.username\n            let uri = Services.getClearUri(connection.uri)\n            if (tmp.indexOf(uri) ===  -1) {\n                tmp.push(uri)\n                tmpuris.push({\n                    uri: uri,\n                    sources: [source]\n                })\n            } else {\n                if (tmpuris[tmp.indexOf(uri)].sources.indexOf(source) ===  -1) {\n                    tmpuris[tmp.indexOf(uri)].sources.push(source)\n                }\n            }\n            return connection\n        })\n        tmpuris.sort(((a, b) => b.sources.length - a.sources.length));\n        setUris(tmpuris.slice(0, pcount));\n    }\n\n    useEffect(() => {\n        const getUriMoreVisited = (pcount) => {\n            let tmpuris = []\n            let tmp = []\n            props.connections.map((connection) => {\n                let source = connection.username ===  '-' ? connection.remote : connection.username\n                let uri = Services.getClearUri(connection.uri)\n                if (tmp.indexOf(uri) ===  -1) {\n                    tmp.push(uri)\n                    tmpuris.push({\n                        uri: uri,\n                        sources: [source]\n                    })\n                } else {\n                    if (tmpuris[tmp.indexOf(uri)].sources.indexOf(source) ===  -1) {\n                        tmpuris[tmp.indexOf(uri)].sources.push(source)\n                    }\n                }\n                return connection\n            })\n            tmpuris.sort(((a, b) => b.sources.length - a.sources.length));\n            setUris(tmpuris.slice(0, pcount));\n        }\n        getUriMoreVisited(count)\n    }, [props.connections, count]);\n\n    return (<React.Fragment>\n        <ListItem button onClick={(e) => { e.preventDefault(e); getUriMoreVisited(count); setOpen(true) }}>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <AssignmentIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary='URI más visitadas' className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">URI con más visitadas</DialogTitle>\n                    <DialogContent>\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleCountChange}\n                                    label=\"Cantidad a mostrar\"\n                                    type=\"number\"\n                                    inputProps={{ min: 1 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={count}\n                                />\n                            </Box>\n                        </Box>\n\n                        {\n                            uris.length > 0 ?\n                                uris.slice(0, count).map((uri, index) => {\n                                    return (<Box display=\"flex\" flexDirection='column'>\n                                        <Box display=\"flex\" alignItems=\"center\" p={0.2} bgcolor=\"background.grouprow\" style={{ borderRadius: '4px' }}>\n                                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                                                <Avatar>\n                                                    <PersonIcon />\n                                                </Avatar>\n                                                <Typography variant=\"h6\" style={{ marginLeft: '0.5rem' }}>\n                                                    <b>{uri.uri}</b>\n                                                </Typography>\n                                            </Box>\n                                            <small className={classes.small}><em style={{ margin: '5px' }}>{uri.sources.length}</em></small>\n                                        </Box>\n                                        <Box display=\"flex\" flexDirection='column' style={{ textAlign: 'left', marginLeft: '3rem' }}>\n                                            {\n                                                uri.sources.map((source, index) => {\n                                                    return (<Typography>\n                                                        {source}\n                                                    </Typography>)\n                                                })\n                                            }\n                                        </Box>\n                                    </Box>)\n                                }) : <Typography>\n                                    En estos momentos no existe ninguna uri\n                                 </Typography>\n                        }\n\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={(e) => { handleClose() }}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                        </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function ConnectionsWithoutUserItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [conectionswithoutuser, setConectionsWithoutUser] = useState([])\n    const [count, setCount] = useState(5)\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setConectionsWithoutUser([])\n\n        setCount(5)\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleCountChange = (e) => {\n        e.preventDefault()\n        if (!validator.isInt(e.target.value.toString()) && e.target.value < 0) {\n            setError(error => ({ ...error, show: true, msg: 'La cantidad no es válida' }))\n        } else {\n            setCount(e.target.value)\n            getConnectionsWithoutUser(e.target.value)\n        }\n    }\n\n    const getConnectionsWithoutUser = (pcount) => {\n        let tmpconectionswithoutuser = [];\n        let sources = [];\n        props.connections.map((connection, index) => {\n            let source = connection.username === '-' ? connection.remote : connection.username\n            if (Services.isIPAddress(source)) {\n                if (sources.indexOf(source) === -1) {\n                    sources.push(source)\n                    tmpconectionswithoutuser.push({\n                        identifier: source,\n                        connections: 1,\n                        activeconnections: connection.active ? 1 : 0\n                    })\n                } else {\n                    tmpconectionswithoutuser[sources.indexOf(source)].connections++\n                    if (connection.active) {\n                        tmpconectionswithoutuser[sources.indexOf(source)].activeconnections++\n                    }\n                }\n            }\n            return connection\n        });\n        setConectionsWithoutUser(tmpconectionswithoutuser.slice(0, pcount));\n    }\n\n    useEffect(() => {\n        const getConnectionsWithoutUser = (pcount) => {\n            let tmpconectionswithoutuser = [];\n            let sources = [];\n            props.connections.map((connection, index) => {\n                let source = connection.username === '-' ? connection.remote : connection.username\n                if (Services.isIPAddress(source)) {\n                    if (sources.indexOf(source) === -1) {\n                        sources.push(source)\n                        tmpconectionswithoutuser.push({\n                            identifier: source,\n                            connections: 1,\n                            activeconnections: connection.active ? 1 : 0\n                        })\n                    } else {\n                        tmpconectionswithoutuser[sources.indexOf(source)].connections++\n                        if (connection.active) {\n                            tmpconectionswithoutuser[sources.indexOf(source)].activeconnections++\n                        }\n                    }\n                }\n                return connection\n            });\n            setConectionsWithoutUser(tmpconectionswithoutuser.slice(0, pcount));\n        }\n        getConnectionsWithoutUser(count)\n    }, [props.connections, count]);\n\n    return (<React.Fragment>\n        <ListItem button onClick={(e) => { e.preventDefault(e); getConnectionsWithoutUser(count); setOpen(true) }}>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <AssignmentIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary='Navegación mediante IP' className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Navegación mediante IP</DialogTitle>\n                    <DialogContent>\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleCountChange}\n                                    label=\"Cantidad a mostrar\"\n                                    type=\"number\"\n                                    inputProps={{ min: 1 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={count}\n                                />\n                            </Box>\n                        </Box>\n\n                        {\n                            conectionswithoutuser.length > 0 ?\n                                conectionswithoutuser.map((conection, index) => {\n                                    return (<Box display=\"flex\" flexDirection='column'>\n                                        <Box display=\"flex\" alignItems=\"center\" p={0.2} bgcolor=\"background.grouprow\" style={{ borderRadius: '4px' }}>\n                                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                                                <Avatar>\n                                                    <PersonIcon />\n                                                </Avatar>\n                                                <Typography variant=\"h6\" style={{ marginLeft: '0.5rem' }}>\n                                                    <b>{Services.parseSource(conection.identifier)}</b>\n                                                </Typography>\n                                            </Box>\n                                            <small className={classes.small}><em style={{ margin: '5px' }}>{conection.connections}</em></small>\n                                        </Box>\n                                        <Box display=\"flex\" flexDirection='column' style={{ textAlign: 'left', marginLeft: '3rem' }}>\n                                            {\n                                                conection.activeconnections === 0 ? 'Sin conexiones activas' : (conection.activeconnections === 1 ? conection.activeconnections + ' conexión activa' : conection.activeconnections + ' conexiones activas')\n                                            }\n                                        </Box>\n                                    </Box>)\n                                }) : <Typography>\n                                    En estos momentos no existe ninguna ip navegando de forma directa\n                                </Typography>\n                        }\n\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={(e) => { handleClose() }}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function UsersMultipleIpItem(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [users, setUsers] = useState([])\n    const [count, setCount] = useState(5)\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setUsers([])\n\n        setCount(5)\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleCountChange = (e) => {\n        e.preventDefault()\n        if (!validator.isInt(e.target.value.toString()) && e.target.value < 0) {\n            setError(error => ({ ...error, show: true, msg: 'La cantidad no es válida' }))\n        } else {\n            setCount(e.target.value)\n            getUsersMultipleIp(e.target.value)\n        }\n    }\n\n    const getUsersMultipleIp = (pcount) => {\n        let tmpusers = [];\n        let sources = [];\n        props.connections.map((connection) => {\n            let source = connection.username === '-' ? connection.remote : connection.username\n            if (!Services.isIPAddress(source)) {\n                if (sources.indexOf(source) === -1) {\n                    sources.push(source)\n                    tmpusers.push({\n                        identifier: source,\n                        ips: [connection.remote]\n                    })\n                } else {\n                    if (tmpusers[sources.indexOf(source)].ips.indexOf(connection.remote) === -1) {\n                        tmpusers[sources.indexOf(source)].ips.push(connection.remote)\n                    }\n                }\n            }\n            return connection\n        });\n        tmpusers = tmpusers.filter(function (user) { return user.ips.length > 1; })\n        tmpusers.sort(((a, b) => b.ips.length - a.ips.length));\n        setUsers(tmpusers.slice(0, pcount));\n    }\n\n    useEffect(() => {\n        const getUsersMultipleIp = (pcount) => {\n            let tmpusers = [];\n            let sources = [];\n            props.connections.map((connection) => {\n                let source = connection.username === '-' ? connection.remote : connection.username\n                if (!Services.isIPAddress(source)) {\n                    if (sources.indexOf(source) === -1) {\n                        sources.push(source)\n                        tmpusers.push({\n                            identifier: source,\n                            ips: [connection.remote]\n                        })\n                    } else {\n                        if (tmpusers[sources.indexOf(source)].ips.indexOf(connection.remote) === -1) {\n                            tmpusers[sources.indexOf(source)].ips.push(connection.remote)\n                        }\n                    }\n                }\n                return connection\n            });\n            tmpusers = tmpusers.filter(function (user) { return user.ips.length > 1; })\n            tmpusers.sort(((a, b) => b.ips.length - a.ips.length));\n            setUsers(tmpusers.slice(0, pcount));\n        }\n        getUsersMultipleIp(count)\n    }, [props.connections, count]);\n\n    return (<React.Fragment>\n        <ListItem button onClick={(e) => { e.preventDefault(e); getUsersMultipleIp(count); setOpen(true) }}>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <AssignmentIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary='Usuarios desde varias IP' className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n                <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Usuarios desde varias IP</DialogTitle>\n                    <DialogContent>\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleCountChange}\n                                    label=\"Cantidad a mostrar\"\n                                    type=\"number\"\n                                    inputProps={{ min: 1 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={count}\n                                />\n                            </Box>\n                        </Box>\n\n                        {\n                            users.length > 0 ?\n                                users.map((user, index) => {\n                                    return (<Box display=\"flex\" flexDirection='column'>\n                                        <Box display=\"flex\" alignItems=\"center\" p={0.2} bgcolor=\"background.grouprow\" style={{ borderRadius: '4px' }}>\n                                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                                                <Avatar>\n                                                    <PersonIcon />\n                                                </Avatar>\n                                                <Typography variant=\"h6\" style={{ marginLeft: '0.5rem' }}>\n                                                    <b>{Services.parseSource(user.identifier)}</b>\n                                                </Typography>\n                                            </Box>\n                                            <small className={classes.small}><em style={{ margin: '5px' }}>{user.ips.length}</em></small>\n                                        </Box>\n                                        <Box display=\"flex\" flexDirection='column' style={{ textAlign: 'left', marginLeft: '3rem' }}>\n                                            {\n                                                user.ips.map((ip, index) => {\n                                                    return (<Typography>\n                                                        {ip}\n                                                    </Typography>)\n                                                })\n                                            }\n                                        </Box>\n                                    </Box>)\n                                }) : <Typography>\n                                    En estos momentos no existen usuarios navegando desde varias ip\n                                </Typography>\n                        }\n\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={(e) => { handleClose() }}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport * as Services from \"../../services/services\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport { green } from '@material-ui/core/colors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    rounded: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n        backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n    }),\n    listText: props => ({\n        color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n    }),\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nvar validator = require('validator');\n\nexport default function UserNotifyConnection(props) {\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: props.prefersDarkMode ? 'dark' : 'light',\n                    primary: {\n                        light: '#757ce8',\n                        main: '#dc3545', //'#3f50b5',\n                        dark: '#002884',\n                        contrastText: '#fff',\n                    },\n                    secondary: {\n                        light: '#ff7961', //focus\n                        main: '#dc3545', //background\n                        dark: '#ba000d', //hover\n                        contrastText: '#fff', // color\n                    },\n                    text: {\n                        secondary: '#9FA2A5'\n                    },\n                    background: {\n                        paper: props.prefersDarkMode ? '#343A40' : '#fff',\n                        default: props.prefersDarkMode ? '#212529' : '#fafafa',\n                    }\n                },\n            }),\n        [props.prefersDarkMode],\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(props);\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const [newnotify, setNewNotify] = useState({\n        identifier: '',\n        sites: []\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setLoading(false);\n\n        setNewNotify({\n            identifier: '',\n            sites: []\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewNotify(newnotify => ({ ...newnotify, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        /*let sites = newnotify.sites.split(',');\n        let siteisvalid = true;\n        sites.map((site) => {\n            if (validator.isEmpty(site, { ignore_whitespace: true })) {\n                siteisvalid = false;\n            }\n            return site\n        })*/\n\n        if (validator.isEmpty(newnotify.identifier, { ignore_whitespace: true })) {\n            setError(error => ({ ...error, show: true, msg: 'El usuario o la dirección ip no es válida' }))\n        } else\n            if (newnotify.sites.length === 0) {\n                setError(error => ({ ...error, show: true, msg: 'Debe especificar al menos un sitio o palabra' }))\n            } else {\n                if (!loading) {\n                    setLoading(true);\n                }\n                await Services.connectionToSite({\n                    host: props.server.host,\n                    identifier: newnotify.identifier,\n                    sites: newnotify.sites\n                }).then((response) => {\n                    setLoading(false);\n                    if (response.data.errors) {\n                        setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                    }\n                    else {\n                        props.showMessage('Notificación resgistrada correctamente', 'success')\n                        handleClose()\n                    }\n                }).catch((err) => {\n                    setLoading(false);\n                    setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                });\n            }\n    }\n\n    /*useEffect(() => {\n        var reactTagInput = document.querySelector(\".react-tag-input__input\");\n        reactTagInput.addEventListener(\"focus\", ()=>{\n            reactTagInput.classList.add(\"react-tag-input-focus\");\n        }, true);\n        reactTagInput.addEventListener(\"blur\", ()=>{\n            reactTagInput.classList.remove(\"react-tag-input-focus\");\n        }, true);\n    }, [])*/\n\n    return (<React.Fragment>\n        <ListItem onClick={(e) => { e.preventDefault(e); setOpen(true) }} button>\n            <ListItemAvatar>\n                <Avatar variant=\"rounded\" className={classes.rounded}>\n                    <SettingsInputComponentIcon />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Conexión a sitios\" className={classes.listText} />\n        </ListItem>\n        <ThemeProvider theme={theme}>\n            {\n\n                <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={handleSubmit}>\n                        <DialogTitle id=\"form-dialog-title\">Conexión a sitios</DialogTitle>\n                        <DialogContent>\n                            {\n                                error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                            }\n\n                            <Box style={{ width: '100%' }}>\n                                <TextField style={{ width: '100%' }}\n                                    onChange={handleChange}\n                                    name=\"identifier\"\n                                    label=\"Usuario o IP\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={newnotify.identifier}\n                                />\n                            </Box>\n                            <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                {/*<TextField style={{ width: '100%' }}\n                                    onChange={handleChange}\n                                    id=\"servermail-to\"\n                                    name=\"sites\"\n                                    label=\"Sitios\"\n                                    multiline\n                                    rows={3}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    placeholder=\"Separadas por coma (,)\"\n                                    value={newnotify.sites}\n                        />*/}\n                                <ReactTagInput\n                                    tags={newnotify.sites}\n                                    name=\"to\"\n                                    placeholder=\"Sitios o palabras. Precione enter al escribir\"\n                                    editable={true}\n                                    readOnly={false}\n                                    removeOnBackspace={true}\n                                    onChange={(toSiteAddress) => { setNewNotify(newnotify => ({ ...newnotify, sites: toSiteAddress }));/*setTags(newTags)*/ }}\n                                    validator={(value) => {\n                                        let isValid = true\n                                        let sites = value.split(' ');\n                                        if (sites.length > 1) {\n                                            isValid = false\n                                            setError(error => ({ ...error, show: true, msg: 'El sitio o palabra no debe de contener espacios' }))\n                                        }\n                                        if (isValid) {\n                                            setError(error => ({ ...error, show: false, msg: '' }))\n                                        }\n                                        return isValid;\n                                    }}\n                                />\n                            </Box>\n                        </DialogContent>\n                        <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                            <div className={classes.wrapper}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<ThumbUpAltIcon />}\n                                    disabled={loading}\n                                >\n                                    Aceptar\n                                </Button>\n                                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            </div>\n                            <Button\n                                onClick={handleClose}\n                                variant=\"contained\"\n                                color=\"default\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<CloseIcon />}\n                            >\n                                Cancelar\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n            }\n        </ThemeProvider>\n    </React.Fragment>);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport * as Services from \"../../services/services\";\nimport TelegramTokenItem from \"./telegramtokenitem\";\nimport ProxyItem from \"./proxyitem\";\nimport MailItem from \"./mailitem\";\nimport UriMoreConnectionsItem from \"./urimoreconnectionsitem\";\nimport UriMoreVisitedItem from \"./urimorevisiteditem\";\nimport ConnectionsWithoutUserItem from \"./connectionswithoutuseritem\"\nimport UsersMultipleIp from \"./usersmultipleipitem\"\nimport UserNotifyConnection from \"./usernotifyconnection\"\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up('lg')]: {\n      width: `100%`,//calc(100% - ${drawerWidth}px)\n      marginLeft: 230\n    },\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    }\n  },\n  drawer: {\n    [theme.breakpoints.up('lg')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: 'none',\n    overflowX: 'hidden'\n  },\n  rounded: props => ({\n    color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary,\n    backgroundColor: props.prefersDarkMode ? '#343A40' : theme.palette.grey['400']\n  }),\n  label: props => ({\n    color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n  }),\n  /*{\n   color: theme.palette.text.secondary,\n   backgroundColor: props.prefersDarkMode ? '#212529' : '#fafafa'///'#343A40',\n },*/\n  marginLeft: {\n    marginLeft: '10px'\n  },\n  listText: props => ({\n    color: props.prefersDarkMode ? theme.palette.text.secondary : theme.palette.secondary\n  })\n}))\n\nexport default function Sidebar(props) {\n  const classes = useStyles(props);\n  const [response, setResponse] = useState(null);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: props.prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            light: '#757ce8',\n            main: '#dc3545', //'#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n          },\n          secondary: {\n            light: '#ff7961', //focus\n            main: '#dc3545', //background\n            dark: '#ba000d', //hover\n            contrastText: '#fff', // color\n          },\n          text: {\n            secondary: '#9FA2A5'\n          },\n          background: {\n            paper: props.prefersDarkMode ? '#212529' : '#e9ecef',\n            default: props.prefersDarkMode ? '#212529' : '#fafafa'\n          }\n        },\n      }),\n    [props.prefersDarkMode],\n  );\n\n  const handleChangeConfig = async (e, config) => {\n    e.preventDefault()\n\n    await Services.updateConfig(config).then((response) => {\n      loadConfig()\n    }).catch((error) => {\n      props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n    })\n  }\n\n  const loadConfig = async () => {\n    await Services.loadconfig().then((response) => {\n      console.log(response.data.config);\n      setResponse(response.data)\n    }).catch((error) => {\n      return\n    })\n  }\n\n  useEffect(() => {\n    loadConfig()\n  }, []);\n\n  const drawer = (\n    <React.Fragment>\n      <div className={classes.toolbar} style={{ marginTop: '1.6rem' }}/>\n      <label className={classes.marginLeft}>REPORTES</label>\n      <List>\n\n        <UsersMultipleIp connections={props.connections} prefersDarkMode={props.prefersDarkMode} />\n\n        <ConnectionsWithoutUserItem connections={props.connections} prefersDarkMode={props.prefersDarkMode} />\n\n        <UriMoreConnectionsItem connections={props.connections} prefersDarkMode={props.prefersDarkMode} />\n\n        <UriMoreVisitedItem connections={props.connections} prefersDarkMode={props.prefersDarkMode} />\n\n      </List>\n      <label className={classes.marginLeft}>CONFIGURAR</label>\n      <List>\n\n        <MailItem showMessage={props.showMessage} loadConfig={loadConfig} mail={response !==  null && response.mail !==  null && response.mail !==  undefined ? response.mail : null} prefersDarkMode={props.prefersDarkMode} />\n\n        <ProxyItem showMessage={props.showMessage} loadConfig={loadConfig} proxy={response !==  null && response.proxy !==  null && response.proxy !==  undefined ? response.proxy : null} prefersDarkMode={props.prefersDarkMode} />\n\n        <TelegramTokenItem showMessage={props.showMessage} loadConfig={loadConfig} bot={response !==  null && response.bot !==  null && response.bot !==  undefined ? response.bot : null} prefersDarkMode={props.prefersDarkMode} handleRefreshChats={props.handleRefreshChats} />\n\n      </List>\n      <label className={classes.marginLeft} >NOTIFICACIONES</label>\n      <List>\n\n        <UserNotifyConnection showMessage={props.showMessage} prefersDarkMode={props.prefersDarkMode} server={props.server}/>\n \n      </List>\n      <Box display=\"flex\" flexDirection=\"column\" style={{ width: '100%', marginLeft: '1rem' }}>\n        <Box>\n          <FormControlLabel\n            classes={{\n              label: classes.label,\n            }}\n            control={<Switch\n              id={\"emailnotification\"}\n              checked={(response !==  null && response.config !==  null && response.config !==  undefined && response.config.mailnotify)}\n              onChange={(e) => { handleChangeConfig(e, { mailnotify: (response !==  null && response.config !==  null && response.config !==  undefined) ? !response.config.mailnotify : true }) }}\n              name={\"emailnotification\"}\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />}\n            label=\"Por correo\"\n          />\n        </Box>\n        <Box>\n          <FormControlLabel\n            classes={{\n              label: classes.label,\n            }}\n            control={<Switch\n              id={\"emailnotification\"}\n              checked={(response !==  null && response.config !==  null && response.config !==  undefined && response.config.botnotify)}\n              onChange={(e) => { handleChangeConfig(e, { botnotify: (response !==  null && response.config !==  null && response.config !==  undefined) ? !response.config.botnotify : true }) }}\n              name={\"emailnotification\"}\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />}\n            label=\"Por SQD-bot\"\n          />\n        </Box>\n      </Box>\n    </React.Fragment>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={props.container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={props.mobileOpen}\n            onClose={props.handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden mdDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </ThemeProvider>\n  )\n}","/* eslint-disable no-unused-vars */\nimport * as React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport PropTypes from \"prop-types\";\n/* eslint-enable no-unused-vars */\n\nexport default class CustomCell extends React.Component {\n  getRenderValue() {\n    if (\n      this.props.columnDef.emptyValue !== undefined &&\n      (this.props.value === undefined || this.props.value === null)\n    ) {\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\n    }\n    if (this.props.columnDef.render) {\n      if (this.props.rowData) {\n        return this.props.columnDef.render(this.props.rowData, \"row\");\n      } else {\n        return this.props.columnDef.render(this.props.value, \"group\");\n      }\n    } else if (this.props.columnDef.type === \"boolean\") {\n      const style = { textAlign: \"left\", verticalAlign: \"middle\", width: 48 };\n      if (this.props.value) {\n        return <this.props.icons.Check style={style} />;\n      } else {\n        return <this.props.icons.ThirdStateCheck style={style} />;\n      }\n    } else if (this.props.columnDef.type === \"date\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleDateString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"time\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleTimeString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"datetime\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"currency\") {\n      return this.getCurrencyValue(\n        this.props.columnDef.currencySetting,\n        this.props.value\n      );\n    }\n\n    return this.props.value;\n  }\n\n  getEmptyValue(emptyValue) {\n    if (typeof emptyValue === \"function\") {\n      return this.props.columnDef.emptyValue(this.props.rowData);\n    } else {\n      return emptyValue;\n    }\n  }\n\n  getCurrencyValue(currencySetting, value) {\n    if (currencySetting !== undefined) {\n      return new Intl.NumberFormat(\n        currencySetting.locale !== undefined ? currencySetting.locale : \"en-US\",\n        {\n          style: \"currency\",\n          currency:\n            currencySetting.currencyCode !== undefined\n              ? currencySetting.currencyCode\n              : \"USD\",\n          minimumFractionDigits:\n            currencySetting.minimumFractionDigits !== undefined\n              ? currencySetting.minimumFractionDigits\n              : 2,\n          maximumFractionDigits:\n            currencySetting.maximumFractionDigits !== undefined\n              ? currencySetting.maximumFractionDigits\n              : 2\n        }\n      ).format(value !== undefined ? value : 0);\n    } else {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n      }).format(value !== undefined ? value : 0);\n    }\n  }\n\n  handleClickCell = e => {\n    if (this.props.columnDef.disableClick) {\n      e.stopPropagation();\n    }\n  };\n\n  getStyle = () => {\n    let cellStyle = {\n      color: \"inherit\",\n      border: 0\n    };\n\n    if (typeof this.props.columnDef.cellStyle === \"function\") {\n      cellStyle = {\n        ...cellStyle,\n        ...this.props.columnDef.cellStyle(this.props.value, this.props.rowData)\n      };\n    } else {\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\n    }\n\n    if (this.props.columnDef.disableClick) {\n      cellStyle.cursor = \"default\";\n    }\n\n    return { ...this.props.style, ...cellStyle };\n  };\n\n  render() {\n    const { icons, columnDef, rowData, ...cellProps } = this.props;\n\n    return (\n      <TableCell\n        size={this.props.size}\n        {...cellProps}\n        style={this.getStyle()}\n        align={\n          [\"numeric\", \"currency\"].indexOf(this.props.columnDef.type) !== -1\n            ? \"right\"\n            : \"left\"\n        }\n        onClick={this.handleClickCell}\n      >\n        {this.props.children}\n      </TableCell>\n    );\n  }\n}\n\nCustomCell.defaultProps = {\n  columnDef: {},\n  value: undefined\n};\n\nCustomCell.propTypes = {\n  columnDef: PropTypes.object.isRequired,\n  value: PropTypes.any,\n  rowData: PropTypes.object\n};\n","import TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport CustomCell from \"./customcell\";\nimport SpeedOutlinedIcon from '@material-ui/icons/SpeedOutlined';\nimport * as Service from \"../../services/services\";\n\nvar validator = require('validator');\n\nexport default class CustomGroupRow extends React.Component {\n  \n  rotateIconStyle = isOpen => ({\n    transform: isOpen ? \"rotate(90deg)\" : \"none\"\n  });\n\n  showResume = (data) => {\n    let size = 0\n    let speed = 0\n    data.forEach((item, index) => {\n      size += item.bytes\n      speed += item.speed_value\n    })\n    return <React.Fragment>\n      <span style={{ marginRight: '5px' }}>\n        {Service.getSize(size)}\n      </span>\n      <span>\n        {Service.getSize(speed) + '/s'}\n      </span>\n    </React.Fragment>\n  }\n\n  render() {\n    let colSpan = this.props.columns.filter(columnDef => !columnDef.hidden)\n      .length;\n    this.props.options.selection && colSpan++;\n    this.props.detailPanel && colSpan++;\n    this.props.actions && this.props.actions.length > 0 && colSpan++;\n    const column = this.props.groups[this.props.level];\n\n    let detail;\n    if (this.props.groupData.isExpanded) {\n      if (this.props.groups.length > this.props.level + 1) {\n        detail = this.props.groupData.groups.map((groupData, index) => (\n          <this.props.components.GroupRow\n            actions={this.props.actions}\n            key={groupData.value || \"\" + index}\n            columns={this.props.columns}\n            components={this.props.components}\n            detailPanel={this.props.detailPanel}\n            getFieldValue={this.props.getFieldValue}\n            groupData={groupData}\n            groups={this.props.groups}\n            icons={this.props.icons}\n            level={this.props.level + 1}\n            path={[...this.props.path, index]}\n            onGroupExpandChanged={this.props.onGroupExpandChanged}\n            onRowSelected={this.props.onRowSelected}\n            onRowClick={this.props.onRowClick}\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            options={this.props.options}\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\n            isTreeData={this.props.isTreeData}\n          />\n        ));\n      } else {\n        detail = this.props.groupData.data.map((rowData, index) => {\n          if (rowData.tableData.editing) {\n            return (\n              <this.props.components.EditRow\n                columns={this.props.columns}\n                components={this.props.components}\n                data={rowData}\n                icons={this.props.icons}\n                path={[...this.props.path, index]}\n                localization={this.props.localization}\n                key={index}\n                mode={rowData.tableData.editing}\n                options={this.props.options}\n                isTreeData={this.props.isTreeData}\n                detailPanel={this.props.detailPanel}\n                onEditingCanceled={this.props.onEditingCanceled}\n                onEditingApproved={this.props.onEditingApproved}\n                getFieldValue={this.props.getFieldValue}\n              />\n            );\n          } else {\n            return (\n              <this.props.components.Row\n                actions={this.props.actions}\n                key={index}\n                columns={this.props.columns}\n                components={this.props.components}\n                data={rowData}\n                detailPanel={this.props.detailPanel}\n                getFieldValue={this.props.getFieldValue}\n                icons={this.props.icons}\n                path={[...this.props.path, index]}\n                onRowSelected={this.props.onRowSelected}\n                onRowClick={this.props.onRowClick}\n                onToggleDetailPanel={this.props.onToggleDetailPanel}\n                options={this.props.options}\n                isTreeData={this.props.isTreeData}\n                onTreeExpandChanged={this.props.onTreeExpandChanged}\n                onEditingCanceled={this.props.onEditingCanceled}\n                onEditingApproved={this.props.onEditingApproved}\n                hasAnyEditingRow={this.props.hasAnyEditingRow}\n              />\n            );\n          }\n        });\n      }\n    }\n\n    const freeCells = [];\n    for (let i = 0; i < this.props.level; i++) {\n      freeCells.push(<TableCell padding=\"checkbox\" key={i} />);\n    }\n\n    let value = this.props.groupData.value;\n    if (column.lookup) {\n      value = column.lookup[value];\n    }\n\n    let title = column.title;\n    if (typeof title !== \"string\") {\n      title = React.cloneElement(title);\n    }\n\n    return (\n      <React.Fragment>\n        <TableRow>\n          {freeCells}\n          <CustomCell\n            colSpan={colSpan}\n            padding=\"none\"\n            columnDef={column}\n            value={value}\n            icons={this.props.icons}\n            groupData={this.props.groupData}\n          >\n            <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={0.2} bgcolor=\"background.grouprow\" style={{ borderRadius: '4px' }}>\n              <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                  {\n                    validator.isIP(Service.parseSource(this.props.groupData.value)) ?\n                      <DesktopWindowsIcon /> :\n                      <PersonIcon />\n                  }\n                </Avatar>\n                <Typography variant=\"h6\" gutterBottom style={{ cursor: 'pointer', marginBottom: '0', marginLeft: '10px' }}\n                  onClick={(e) => { this.props.handleLdapDialog(this.props.groupData) }}>\n                  {Service.parseSource(this.props.groupData.value)}\n                </Typography>\n              </Box>\n              {this.showResume(this.props.groupData.data)}\n              <IconButton\n                style={{\n                  padding: '5px'\n                }}\n                onClick={(e) => { this.props.handleLinkQuotaClick(this.props.groupData.value) }}\n              >\n                <SpeedOutlinedIcon />\n              </IconButton>\n\n              <IconButton\n                style={{\n                  padding: '5px'\n                }}\n                onClick={(e) => { this.props.handleSourcesLockClick(this.props.groupData.value) }}\n              >\n                <LockIcon />\n              </IconButton>\n              <IconButton\n                style={{\n                  padding: '5px',\n                  transition: \"all ease 200ms\",\n                  ...this.rotateIconStyle(this.props.groupData.isExpanded)\n                }}\n                onClick={event => {\n                  this.props.onGroupExpandChanged(this.props.path);\n                }}\n              >\n                <this.props.icons.DetailPanel style={{ fontSize: 30 }} />\n              </IconButton>\n            </Box>\n          </CustomCell>\n        </TableRow>\n        {detail}\n      </React.Fragment>\n    );\n  }\n}\n\nCustomGroupRow.defaultProps = {\n  columns: [],\n  groups: [],\n  options: {},\n  level: 0\n};\n\nCustomGroupRow.propTypes = {\n  actions: PropTypes.array,\n  columns: PropTypes.arrayOf(PropTypes.object),\n  components: PropTypes.object,\n  detailPanel: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.object)\n  ]),\n  getFieldValue: PropTypes.func,\n  groupData: PropTypes.object,\n  groups: PropTypes.arrayOf(PropTypes.object),\n  hasAnyEditingRow: PropTypes.bool,\n  icons: PropTypes.object,\n  isTreeData: PropTypes.bool.isRequired,\n  level: PropTypes.number,\n  localization: PropTypes.object,\n  onGroupExpandChanged: PropTypes.func,\n  onRowSelected: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onToggleDetailPanel: PropTypes.func.isRequired,\n  onTreeExpandChanged: PropTypes.func.isRequired,\n  onEditingCanceled: PropTypes.func,\n  onEditingApproved: PropTypes.func,\n  options: PropTypes.object,\n  path: PropTypes.arrayOf(PropTypes.number)\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport * as Services from \"../../services/services\";\n\nvar validator = require('validator');\n\nexport default function LdapDialog(props) {\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={props.ldapdialog.open}>\n      <DialogContent>\n        {\n          props.ldapdialog.ldapinfo !== null ?\n            <Box m={1}>\n              <Box display='flex' flexDirection='column' alignItems='center'>\n                <Avatar style={{ width: '4rem', height: '4rem' }}>\n                  {\n                    validator.isIP(Services.parseSource(props.ldapdialog.groupData.value)) ?\n                      <DesktopWindowsIcon /> :\n                      <PersonIcon style={{ fontSize: 60 }} />\n                  }\n                </Avatar>\n                <Typography variant=\"h6\"><b>{props.ldapdialog.ldapinfo.cn}</b></Typography>\n                <Typography>{Services.parseSource(props.ldapdialog.groupData.value)}</Typography>\n                {\n                  props.ldapdialog.ldapinfo.memberOf !== undefined ?\n                    <Box display='flex' alignItems='center' flexWrap='wrap' justifyContent='center'>\n                      {\n                        props.ldapdialog.ldapinfo.memberOf.map((group, index) => {\n                          let splitgroup = (group.split(','))[0].split('=')[1] \n                          return <Chip label={splitgroup} style={{ margin: '1px' }} />\n                        })\n                      }\n                    </Box>\n                    : ''\n                }\n              </Box>\n            </Box>\n            : ''\n        }\n      </DialogContent>\n      <DialogActions style={{ justifyContent: 'center', marginBottom: '1rem'}}>\n        <Button onClick={() => { props.handleClose() }} variant=\"contained\" color=\"secondary\" size=\"small\" >\n          <ThumbUpAltIcon />\n          <Typography>Aceptar</Typography>\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport CustomGroupRow from \"../materialtable/customgrouprow\";\nimport * as Services from \"../../services/services\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport MaterialTable from \"material-table\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { green, red, blue, orange, grey } from '@material-ui/core/colors';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport LdapDialog from \"../dialog/ldapdialog\";\nimport ConfirmDialog from \"../dialog/confirm\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nvar validator = require('validator');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    borderRadius: '1rem'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  }\n}));\n\nconst ActiveBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#43A047',\n    color: '#43A047',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    height: '14px',\n    minWidth: '14px',\n    borderRadius: '1rem',\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst NoActiveBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#495057',\n    color: '#495057',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    height: '14px',\n    minWidth: '14px',\n    borderRadius: '1rem',\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nexport default function Content(props) {\n  const classes = useStyles();\n\n  const [source, setSource] = useState(null)\n\n  const [ldapdialog, setLdapDialog] = useState({\n    open: false,\n    ldapinfo: null,\n    groupData: null\n  });\n\n  const [locksourcedialog, setLockSourceDialog] = useState({\n    open: false,\n    groupdata: null\n  });\n\n  const [quotadialog, setQuotaDialog] = useState({\n    open: false,\n    quotas: null,\n    quotaid: 'noquota'\n  });\n\n  const [uridialog, setURIDialog] = useState({\n    open: false,\n    rowData: null,\n    uriinfo: null\n  });\n\n  const [error, setError] = useState({\n    show: false,\n    type: 'error',\n    msg: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n  const processUrl = (rowData) => {\n    let text = rowData.uri\n    if (rowData.uri.length > 60)\n      text = rowData.uri.substring(0, 60) //\n    return <Tooltip title={rowData.uri} >\n      <Box display=\"flex\" flexDirection='column' alignItems='center'>\n        <Typography style={{ maxWidth: '100%', overflow: 'auto' }}>{text}</Typography>\n      </Box>\n    </Tooltip>\n  }\n\n  const logType = (logtype) => {\n    let badge = '';\n    switch (logtype) {\n      case 'TCP_MISS':\n        badge = <Chip label=\"Desde url\" color=\"primary\" style={{ height: '1.3rem' }} />;\n        break;\n      case 'TCP_HIT':\n        badge = <Chip label=\"Desde caché\" style={{ height: '1.3rem', background: green[500] }} />;\n        break;\n      case 'TCP_REFRESH_MODIFIED':\n        badge = <Chip label=\"Refrescado\" style={{ height: '1.3rem', background: blue[700] }} />;\n        break;\n      case 'TCP_DENIED':\n        badge = <Chip label=\"Denegado\" style={{ height: '1.3rem', background: red[300] }} />;\n        break;\n      case 'TCP_TUNNEL':\n        badge = <Chip label=\"Cifrada\" style={{ height: '1.3rem', background: orange[800] }} />;\n        break;\n      case 'TAG_NONE':\n        badge = <Chip label=\"Desconocido\" style={{ height: '1.3rem', background: grey[500] }} />;\n        break;\n      default:\n        badge = <Chip label={logtype} style={{ height: '1.3rem' }} />;\n        break;\n    }\n    return badge;\n  }\n\n  const delayPools = (delay) => {\n    let text = 'Sin límites';\n    if (delay.number !== 0) {\n      delay.types.map((type) => {\n        if (type.max !== -1) {\n          text = 'Limitado a: ' + type.restore + ' después de: ' + type.max;\n        }\n        return type\n      })\n    }\n    return text\n  }\n\n  const rowToShow = () => {\n    if (props.usersConnected > 20)\n      return [10, 20, { value: props.usersConnected, label: 'Todo' }]\n    else if (props.usersConnected > 10)\n      return [10, props.usersConnected]\n    return [props.usersConnected]\n  }\n\n  const urlInfo = (rowData) => {\n    setURIDialog(uridialog => ({ ...uridialog, open: true, rowData: rowData }))\n    Services.getUriInfo(rowData.uri).then((response) => {\n      if (!response.data.errors && response.data.size !== -1) {\n        console.log(response.data)\n        setURIDialog(uridialog => ({ ...uridialog, open: true, rowData: rowData, uriinfo: response.data }))\n      }\n    }).catch((error) => { return })\n  }\n\n  const handleClose = () => {\n    setSource(null)\n    setLdapDialog({\n      open: false,\n      ldapinfo: null,\n      groupData: null\n    });\n    setLockSourceDialog({\n      open: false,\n      groupdata: null\n    })\n    setError({\n      show: false,\n      type: 'error',\n      msg: ''\n    })\n    setLoading(false)\n    setQuotaDialog({\n      open: false,\n      quotas: null,\n      quotaid: 'noquota'\n    });\n    setURIDialog({\n      open: false,\n      rowData: null,\n      uriinfo: null\n    });\n  };\n\n  const handleLdapDialog = async (groupData) => {\n    if (!validator.isIP(Services.parseSource(groupData.value))) {\n      setLdapDialog(ldapdialog => ({ ...ldapdialog, open: true }))\n      await Services.getSourceLdapInfo(Services.parseSource(groupData.value), props.server.host).then((response) => {\n        setLdapDialog({\n          open: true,\n          ldapinfo: response.data,\n          groupData: groupData\n        })\n      }).catch((err) => {\n        setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n        setLdapDialog(ldapdialog => ({ ...ldapdialog, open: true }))\n      })\n    }\n  }\n\n  const loadSource = async (source) => {\n    await Services.getSourceByIdentifier(source).then((response) => {\n      if (!response.data.errors) {\n        setSource(response.data);\n      }\n    }).catch((err) => {\n      setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n    })\n  }\n\n  const loadQuotas = async (source) => {\n    await Services.getQuotas().then((response) => {\n      if (!response.data.errors) {\n        setQuotaDialog(quotadialog => ({ ...quotadialog, quotas: response.data }))\n      }\n    }).catch((err) => {\n      setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n    })\n  }\n\n  const handleSourcesLockClick = async (source) => {\n    loadSource(source)\n    setLockSourceDialog(locksourcedialog => ({ ...locksourcedialog, open: true }));\n  }\n\n  const handleLinkQuotaClick = async (source) => {\n    console.log('source ', source)\n    loadSource(source)\n    loadQuotas()\n    setQuotaDialog(quotadialog => ({ ...quotadialog, open: true }))\n  }\n\n  const handleSourcesLock = async () => {\n    setLoading(true)\n    await Services.sourceLock(source.identifier, props.server.host).then((response) => {\n      setLoading(false)\n      if (response.data.errors) {\n        props.showMessage(response.data.errors[0].msg, 'error')\n        handleClose()\n      } else {\n        props.showMessage('Se realizó el bloqueo correctamente', 'success')\n        handleClose()\n        props.handleRefreshSourcesLock()\n      }\n    }).catch((err) => {\n      setLoading(false)\n      props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n      handleClose()\n    });\n  }\n\n  const handleQuotaChange = (e) => {\n    e.preventDefault()\n    setQuotaDialog(quotadialog => ({ ...quotadialog, quotaid: e.target.value }))\n  }\n\n  const handleSubmit = async () => {\n    console.log('origen ', source)\n    setError({\n      show: false,\n      type: 'error',\n      msg: ''\n    })\n\n    if (!loading) {\n      setLoading(true);\n    }\n\n    await Services.linkSource({ host: props.server.host, identifier: source.identifier, quotaid: quotadialog.quotaid }).then((response) => {\n      setLoading(false);\n\n      if (response.data.errors)\n        setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n      else {\n        if (response.data.status !== \"nothingtodo\") {\n          props.showMessage(response.data.msg, 'success')\n          handleClose()\n          props.handleRefreshQuota()\n        } else\n          setError(error => ({ ...error, show: true, msg: 'Seleccione una cuota de la lista' }))\n      }\n    }).catch((err) => {\n      setLoading(false);\n      setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n    });\n  }\n\n  const customRow = rowData => {\n    return (\n      <tr>\n        <td colSpan=\"9\">\n          <table style={{ width: '100%' }}>\n            <CustomGroupRow handleLinkQuotaClick={handleLinkQuotaClick} handleSourcesLockClick={handleSourcesLockClick} handleLdapDialog={handleLdapDialog} showMessage={props.showMessage} handleRefreshQuota={props.handleRefreshQuota} handleRefreshSourcesLock={props.handleRefreshSourcesLock} {...rowData} />\n          </table>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <MuiThemeProvider>\n      <MaterialTable\n        style={{ borderRadius: '1rem' }}\n        icons={tableIcons}\n        title=\"Detalles de las conexiones\"\n        data={props.data}\n        columns={[\n          { title: 'Origen', field: 'username', render: rowData => Services.parseSource(rowData.username), defaultGroupOrder: 0 },\n          //{ title: 'Avatar', field: 'imageUrl', render: rowData => <Image src={rowData.imageUrl} width=\"40\" height=\"40\" classname=\"rounded-circle\" /> },\n          { title: 'PC', field: 'remote' },\n          { title: 'URL', field: 'uri', render: rowData => processUrl(rowData) },\n          { title: 'Respuesta', field: 'logType', render: rowData => logType(rowData.logType), grouping: false },//logType\n          {\n            title: 'Duración', field: 'time',\n            customSort: (a, b) => a.seconds - b.seconds,\n            grouping: false\n          },\n          {\n            title: 'Tamaño', field: 'size',\n            customSort: (a, b) => a.bytes - b.bytes\n          },\n          {\n            title: 'Velocidad', field: 'speed',\n            customSort: (a, b) => a.speed_value - b.speed_value\n          },\n          {\n            title: 'Estado', field: 'active', lookup: {\n              true: <ActiveBadge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                variant=\"dot\"\n              >\n              </ActiveBadge>,\n              false: <NoActiveBadge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                variant=\"dot\"\n              >\n              </NoActiveBadge>\n            }, grouping: false, sorting: false\n          }\n        ]}\n\n        components={{\n          GroupRow: rowData => customRow(rowData)\n        }}\n        /*onRowClick={((evt, selectedRow: any) => {\n        alert(selectedRow.name)\n      })}*/\n        options={{\n          grouping: true,\n          sorting: true,\n          defaultExpanded: false,\n          //exportButton: true,\n          paging: true,\n          pageSize: 10,\n          pageSizeOptions: rowToShow(),\n          actionsColumnIndex: -1,\n          headerStyle: {\n            fontWeight: 700\n          },\n          rowStyle: {\n            padding: '2px',\n            border: 'none'\n          },\n          cellStyle: {\n            padding: '2px',\n          }\n        }}\n        localization={{\n          grouping: {\n            placeholder: 'Arrastrar encabezado aqui para agrupar',\n            groupedBy: 'Agrupado por:'\n          },\n          pagination: {\n            labelDisplayedRows: '{from}-{to} de {count}',\n            labelRowsSelect: 'registros'\n          },\n          toolbar: {\n            nRowsSelected: '{0} fila(s) seleccionadas',\n            exportTitle: 'Exportar',\n            exportAriaLabel: 'Exportar',\n            exportCSVName: 'Exportar como CSV',\n            exportPDFName: 'Exportar como PDF',\n            searchTooltip: 'Buscar',\n            searchPlaceholder: 'Buscar'\n          },\n          header: {\n            actions: 'Acción'\n          },\n          body: {\n            emptyDataSourceMessage: 'Sin datos que mostrar',\n            filterRow: {\n              filterTooltip: 'Filter'\n            }\n          }\n        }}\n        actions={[\n          {\n            icon: () => <OpenInNewIcon />,\n            tooltip: 'Abrir enlace en una nueva pestaña',\n            onClick: (event, rowData) => window.open(rowData.uri, '_blank')\n          },\n          {\n            icon: () => <InfoIcon />,\n            tooltip: 'Ver información de la uri',\n            onClick: (event, rowData) => urlInfo(rowData)\n          }\n        ]}\n      //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n      />\n\n      {\n        ldapdialog.ldapinfo === null && !error.show ?\n          <Dialog open={ldapdialog.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {\n              <DialogContent>\n                <Box display=\"flex\" flexDirection='column' alignItems='center'>\n                  <CircularProgress color=\"secondary\" />\n                  <Typography variant=\"h6\">Cargando información</Typography>\n                </Box>\n              </DialogContent>\n\n            }\n          </Dialog>\n          :\n          <LdapDialog ldapdialog={ldapdialog} handleClose={handleClose} />\n      }\n\n\n      <Dialog open={uridialog.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        {\n          uridialog.rowData ?\n            <React.Fragment>\n              <DialogContent>\n                <Box display=\"flex\" alignItems='center' justifyContent='space-between'>\n                  <Typography style={{ display: 'flex', alignItems: 'center' }}><GetAppIcon style={{ fontSize: 30 }} />{uridialog.rowData.size}</Typography>\n                  <Typography style={{ display: 'flex', alignItems: 'center' }}><ImportExportIcon style={{ fontSize: 30 }} />{uridialog.rowData.speed}</Typography>\n                  <IconButton component=\"span\" onClick={() => { window.open(uridialog.rowData.uri, '_blank') }}>\n                    <OpenInNewIcon />\n                  </IconButton>\n                </Box>\n\n                <SimpleBar style={{ width: '30rem', maxWidth: '100%' }}>\n                  <Typography style={{ marginBottom: '10px' }}>{uridialog.rowData.uri}</Typography>\n                </SimpleBar>\n\n                <Box>\n                  <Typography style={{ display: 'flex', alignItems: 'center', marginTop: '0.5rem' }} variant=\"body2\" color=\"textSecondary\"><HighlightOffIcon style={{ fontSize: 30 }} />{delayPools(uridialog.rowData.delay_pool)}</Typography>\n                </Box>\n\n                {\n                  uridialog.uriinfo &&\n                  <React.Fragment>\n                    <Box width=\"100%\" mr={1} mt={1}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">Total a descargar {Services.getSize(uridialog.uriinfo.size)}</Typography>\n                    </Box>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Box width=\"100%\" mr={1}>\n                        <LinearProgress variant=\"determinate\" value={uridialog.rowData.bytes === 0 ? 0 : Math.round(((uridialog.rowData.bytes * 100) / uridialog.uriinfo.size))} />\n                      </Box>\n                      <Box minWidth={35}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{uridialog.rowData.bytes === 0 ? 0 : Math.round(((uridialog.rowData.bytes * 100) / uridialog.uriinfo.size))}%</Typography>\n                      </Box>\n                    </Box>\n                  </React.Fragment>\n                }\n\n              </DialogContent>\n              <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                <div className={classes.wrapper}>\n                  <Button\n                    onClick={handleClose}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    className={classes.button}\n                    startIcon={<ThumbUpAltIcon />}\n                    disabled={loading}\n                  >\n                    Aceptar\n                  </Button>\n                  {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                </div>\n              </DialogActions>\n            </React.Fragment>\n            : ''\n        }\n      </Dialog>\n\n\n      {\n        source === null && error.show &&\n        <Dialog open={ldapdialog.open || locksourcedialog.open || quotadialog.open || uridialog.open ? true : false} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">ERROR</DialogTitle>\n          <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem', marginLeft: '1.6rem', marginRight: '1.6rem' }}>{error.msg}</Alert>\n          <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n            <div className={classes.wrapper}>\n              <Button\n                onClick={handleClose}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                className={classes.button}\n                startIcon={<ThumbUpAltIcon />}\n                disabled={loading}\n              >\n                Aceptar\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n          </DialogActions>\n        </Dialog>\n      }\n\n      {\n        source !== null &&\n        <ConfirmDialog open={locksourcedialog.open} loading={loading} handleClose={handleClose} handleConfirmClick={handleSourcesLock} >\n          <Typography variant=\"h6\" gutterBottom> Seguro que deseas bloquear a:</Typography>\n          <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n            <Avatar>\n              {\n                validator.isIP(source.identifier) ?\n                  <DesktopWindowsIcon /> :\n                  <PersonIcon />\n              }\n            </Avatar>\n            <Typography variant=\"h6\" gutterBottom style={{ marginBottom: '0', marginLeft: '10px' }}>\n              {Services.parseSource(source.identifier)}\n            </Typography>\n          </Box>\n        </ConfirmDialog>\n      }\n\n      {\n        source !== null &&\n        <Dialog fullWidth={true} maxWidth=\"xs\" open={quotadialog.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <form onSubmit={handleSubmit}>\n            <DialogTitle id=\"form-dialog-title\">Establecer cuota</DialogTitle>\n            <DialogContent>\n\n              {\n                error.show && <Alert variant=\"outlined\" severity=\"error\" style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n              }\n\n              {\n                source !== null && source.quota !== undefined && !source.errors ?\n                  <Alert variant=\"outlined\" severity=\"warning\" style={{ marginBottom: '1rem' }}><em>Ya tiene una cuota definida de <b>{Services.getSize(source.quota.limit) + ' - ' + Services.convertQuotaType(source.quota.type)}</b> Seleccione la opción \"Sin cuota\" si lo que desea es eliminarla.</em></Alert>\n                  : ''\n              }\n\n              <Box display=\"flex\" alignItems=\"center\" flexGrow={1} marginBottom=\"2rem\">\n                <Avatar>\n                  {\n                    validator.isIP(source.identifier) ?\n                      <DesktopWindowsIcon /> :\n                      <PersonIcon />\n                  }\n                </Avatar>\n                <Typography variant=\"h6\" gutterBottom style={{ marginBottom: '0', marginLeft: '10px' }}>\n                  {Services.parseSource(source.identifier)}\n                </Typography>\n              </Box>\n\n              <Box style={{ width: '100%', marginTop: source !== null && source.quota !== undefined ? '2rem' : '1rem' }}>\n                <FormControl size=\"small\" variant=\"outlined\" style={{ width: '100%' }}>\n                  <InputLabel htmlFor=\"set-source-quota\">Tipo de Cuota</InputLabel>\n                  <Select style={{ width: '100%' }}\n                    onChange={handleQuotaChange}\n                    native\n                    label=\"Tipo de Cuota\"\n                    inputProps={{\n                      name: 'quotaid',\n                      id: 'set-source-quota',\n                    }}\n                  >\n                    <option value='noquota'>Sin cuota</option>\n                    {\n                      quotadialog.quotas !== null && !quotadialog.quotas.errors ?\n                        quotadialog.quotas.map((quota, index) => {\n                          return <option value={quota._id}>{Services.getSize(quota.limit) + ' - ' + Services.convertQuotaType(quota.type)}</option>\n                        })\n                        : ''\n                    }\n                  </Select>\n                </FormControl>\n              </Box>\n\n            </DialogContent>\n            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n              <div className={classes.wrapper}>\n                <Button\n                  onClick={handleSubmit}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  className={classes.button}\n                  startIcon={<ThumbUpAltIcon />}\n                  disabled={loading}\n                >\n                  Aceptar\n                </Button>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n              <Button\n                onClick={handleClose}\n                variant=\"contained\"\n                color=\"default\"\n                size=\"small\"\n                className={classes.button}\n                startIcon={<CloseIcon />}\n              >\n                Cancelar\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      }\n    </MuiThemeProvider>\n  )\n}","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport * as Services from \"../../services/services\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    }\n}));\n\nexport default function ServerItem(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleActivateServerClick = (e) => {\n        e.preventDefault();\n        props.handleActivateServerClick(props.server._id)\n    }\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteServer(props.server._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor eliminado correctamente', 'success')\n                handleClose()\n                props.loadServers()\n            }\n        }).catch((error) => {\n            setLoading(false);\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n    };\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={1} bgcolor=\"background.paper\">\n            <Box id={'server' + props.index} key={'server' + props.index} display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                    <DesktopWindowsIcon fontSize=\"medium\" />\n                </Avatar>\n                <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom className={classes.typography}>\n                    {props.server.host}\n                </Typography>\n            </Box>\n            <Box display=\"flex\">\n                <Switch\n                    checked={props.server.active}\n                    onChange={(e) => { handleActivateServerClick(e) }}\n                    name={\"server\" + props.server._id}\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n                <Button onClick={(e) => setOpen(true)} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n                    <DeleteOutlineIcon />\n                </Button>\n            </Box>\n            <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                <Typography variant=\"h6\" gutterBottom> Esta a punto de eliminar el servidor:</Typography>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                    <Avatar>\n                        <DesktopWindowsIcon fontSize=\"medium\" />\n                    </Avatar>\n                    <Typography variant=\"h6\" gutterBottom className={classes.typography}>\n                        {props.server.host}\n                    </Typography>\n                </Box>\n            </ConfirmDialog>\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport ServerItem from './serveritem'\nimport * as Services from \"../../services/services\"\n\nvar validator = require('validator');\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function ServerItems(props) {\n    const classes = useStyles();\n\n    const [servers, setServers] = useState([])\n\n    const [loading, setLoading] = useState(false);\n\n    const [newserver, setNewServer] = useState({\n        host: '',\n        port: '3128',\n        password: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const [open, setOpen] = useState(false);\n\n    const [serversHidden, setServersHidden] = useState(true)\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setNewServer({\n            host: '',\n            port: 3128,\n            password: ''\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewServer(newserver => ({ ...newserver, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        if (!validator.isIP(newserver.host)) {\n            setError(error => ({ ...error, show: true, msg: 'La dirección ip del servidor no es válida' }))\n        } else\n            if (!validator.isPort(newserver.port.toString())) {\n                setError(error => ({ ...error, show: true, msg: 'El puerto no es válido' }))\n            } else\n                if (validator.isEmpty(newserver.password, { ignore_whitespace: true })) {\n                    setError(error => ({ ...error, show: true, msg: 'La contraseña no es válida' }))\n                } else {\n                    if (!loading) {\n                        setLoading(true);\n                    }\n                    await Services.addServer(newserver.host, newserver.port, newserver.password)\n                        .then(async (response) => {\n                            setLoading(false);\n                            if (response.data.errors) {\n                                setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                            }\n                            else {\n                                props.showMessage('Servidor registrado correctamente!', 'success')\n                                handleClose()\n                                loadServers()\n                                await Services.getConnectionsData()\n                            }\n                        }).catch((error) => {\n                            setLoading(false);\n                            setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                        });\n                }\n    }\n\n    const handleDeleteServerClick = async (host, id) => {\n        await Services.deleteServer(id).then(async (response) => {\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor ' + response.data.host + ' eliminado correctamente', 'success')\n                loadServers();\n                await Services.getConnectionsData()\n            }\n        }).catch((error) => {\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleActivateServerClick = async (id) => {\n        await Services.activateServer(id).then(async (response) => {\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor ' + response.data.host + ' activado correctamente', 'success')\n                loadServers();\n                await Services.getConnectionsData()\n            }\n        }).catch((error) => {\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const loadServers = async (showMsg = false) => {\n        await Services.getServers().then((response) => {\n            if (response.data.length === 0) {\n                setOpen(true);\n            }\n            setServers(response.data)\n            if (response.data.errors && showMsg)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else\n                if (showMsg)\n                    props.showMessage('Lista de servidores refrescada!', 'success')\n        }).catch((error) => {\n            if (showMsg)\n                props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleRefreshClick = (e) => {\n        e.preventDefault()\n        loadServers(true)\n    }\n\n    useEffect(() => {\n        async function getServers() {\n            await Services.getServers().then((response) => {\n                if (response.data.length === 0) {\n                    setOpen(true);\n                }\n                setServers(response.data)\n            }).catch((error) => {\n                return\n            })\n        }\n        getServers();\n    }, [props.server.host]);\n\n    return (\n        <Grid item xs={12} sm={12} >\n            <Paper className={classes.paper}>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n                    <Box flexGrow={1}>\n                        <Typography color=\"textPrimary\" variant=\"h6\">Servidores</Typography>\n                    </Box>\n                    <IconButton onClick={(e) => { e.preventDefault(); setOpen(true); }} edge=\"end\" aria-label=\"add\">\n                        <ControlPointIcon />\n                    </IconButton>\n                    <IconButton onClick={(e) => {\n                        handleRefreshClick(e)\n                    }} edge=\"end\" aria-label=\"delete\">\n                        <ReplayIcon />\n                    </IconButton>\n                </Box>\n                <div style={{ width: '100%' }}>\n                    {\n                        servers.length > 0 &&\n                        servers.slice(0, 3).map((server, index) => {\n                            return <ServerItem loadServers={loadServers} showMessage={props.showMessage} key={'server' + index} index={index} server={server} handleActivateServerClick={handleActivateServerClick} handleDeleteServerClick={handleDeleteServerClick} />\n                        })\n                    }\n                </div>\n                {\n                    servers.length > 3 &&\n                    <React.Fragment>\n                        <div style={{ width: '100%', display: serversHidden ? 'none' : 'inherit' }}>\n                            {\n                                servers.slice(3, servers.length).map((server, index) => {\n                                    return <ServerItem loadServers={loadServers} showMessage={props.showMessage} key={'server' + index} index={index} server={server} handleActivateServerClick={handleActivateServerClick} handleDeleteServerClick={handleDeleteServerClick} />\n                                })\n                            }\n                        </div>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                            <Button onClick={() => { setServersHidden(!serversHidden) }}>{serversHidden ? 'Ver todos' : 'Volver a ocultar'}</Button>\n                        </Box>\n                    </React.Fragment>\n                }\n            </Paper>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <form onSubmit={handleSubmit}>\n                    <DialogTitle id=\"form-dialog-title\">Registrar Servidor</DialogTitle>\n                    <DialogContent>\n\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField\n                                    onChange={handleChange}\n                                    id=\"server-host\"\n                                    name=\"host\"\n                                    label=\"IP del servidor\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={newserver.host}\n                                />\n                            </Box>\n                            <Box>\n                                <TextField\n                                    onChange={handleChange}\n                                    id=\"server-port\"\n                                    label=\"Puerto\"\n                                    name=\"port\"\n                                    type=\"number\"\n                                    defaultValue=\"3128\"\n                                    inputProps={{ min: 1, max: 65536 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={newserver.port}\n                                />\n                            </Box>\n                        </Box>\n                        <Box style={{ width: '100%', marginTop: '1rem' }}>\n                            <TextField style={{ width: '100%' }}\n                                onChange={handleChange}\n                                id=\"server-password\"\n                                name=\"password\"\n                                label=\"Contraseña\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={newserver.password}\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                        <Button\n                            onClick={handleClose}\n                            variant=\"contained\"\n                            color=\"default\"\n                            size=\"small\"\n                            className={classes.button}\n                            startIcon={<CloseIcon />}\n                        >\n                            Cancelar\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport * as Services from \"../../services/services\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    }\n}));\n\nexport default function ServerLdapItem(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteLdapServer(props.server._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor LDAP ' + response.data.host + ' eliminado correctamente', 'success')\n                handleClose()\n                props.loadLdapServers();\n            }\n        }).catch((error) => {\n            setLoading(false);\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n    };\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={1} bgcolor=\"background.paper\">\n            <Box id={'server' + props.index} key={'server' + props.index} display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                    <DesktopWindowsIcon fontSize=\"medium\" />\n                </Avatar>\n                <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom className={classes.typography}>\n                    {props.server.host}\n                </Typography>\n            </Box>\n            <Box display=\"flex\">\n                <Button onClick={(e) => setOpen(true)} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n                    <DeleteOutlineIcon />\n                </Button>\n            </Box>\n            <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                <Typography variant=\"h6\" gutterBottom> Esta a punto de eliminar el servidor LDAP:</Typography>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                    <Avatar>\n                        <DesktopWindowsIcon fontSize=\"medium\" />\n                    </Avatar>\n                    <Typography variant=\"h6\" gutterBottom className={classes.typography}>\n                        {props.server.host}\n                    </Typography>\n                </Box>\n            </ConfirmDialog>\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport ServerLdapItem from './serverldapitem'\nimport * as Services from \"../../services/services\"\n\nvar validator = require('validator');\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function ServerLdapItems(props) {\n    const classes = useStyles();\n\n    const [servers, setServers] = useState([])\n\n    const [loading, setLoading] = useState(false);\n\n    const [newserver, setNewServer] = useState({\n        host: '',\n        port: '389',\n        dnbase: '',\n        dnuser: '',\n        password: '',\n        encryption: 'none'\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const [open, setOpen] = useState(false);\n\n    const [serversHidden, setServersHidden] = useState(true)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setNewServer({\n            host: '',\n            port: '389',\n            dnbase: '',\n            dnuser: '',\n            password: '',\n            encryption: 'none'\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewServer(newserver => ({ ...newserver, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        if (!validator.isIP(newserver.host)) {\n            setError(error => ({ ...error, show: true, msg: 'La dirección ip del servidor no es válida' }))\n        } else\n            if (!validator.isPort(newserver.port.toString())) {\n                setError(error => ({ ...error, show: true, msg: 'El puerto no es válido' }))\n            } else\n                if (validator.isEmpty(newserver.dnbase, { ignore_whitespace: true })) {\n                    setError(error => ({ ...error, show: true, msg: 'El Dn base no es válida' }))\n                } else\n                    if (validator.isEmpty(newserver.dnuser, { ignore_whitespace: true })) {\n                        setError(error => ({ ...error, show: true, msg: 'El Dn usuario no es válida' }))\n                    } else\n                        if (validator.isEmpty(newserver.password, { ignore_whitespace: true })) {\n                            setError(error => ({ ...error, show: true, msg: 'La contraseña no es válida' }))\n                        } else {\n                            if (!loading) {\n                                setLoading(true);\n                            }\n                            await Services.addLdapServer({\n                                host: newserver.host,\n                                port: newserver.port,\n                                dnbase: newserver.dnbase,\n                                dnuser: newserver.dnuser,\n                                password: newserver.password,\n                                encryption: newserver.encryption\n                            }).then((response) => {\n                                setLoading(false);\n                                if (response.data.errors)\n                                    setError(error => ({ ...error, show: true, msg: 'El servidor LDAP no pudo ser registrado la respuesta fue: ' + response.data.errors[0].msg }))\n                                else {\n                                    props.showMessage('Servidor LDAP registrado correctamente!', 'success')\n                                    handleClose()\n                                    loadLdapServers()\n                                }\n                            }).catch((error) => {\n                                setLoading(false);\n                                setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                            });\n                        }\n    }\n\n    const loadLdapServers = async (showMsg = false) => {\n        await Services.getLdapServers().then((response) => {\n            setServers(response.data)\n            if (response.data.errors && showMsg)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else\n                if (showMsg)\n                    props.showMessage('Lista de servidores refrescada!', 'success')\n        }).catch((error) => {\n            if (showMsg)\n                props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    useEffect(() => {\n        async function getLdapServers() {\n            await Services.getLdapServers().then((response) => {\n                setServers(response.data)\n            }).catch((error) => { return })\n        }\n        getLdapServers();\n    }, [props.server.host]);\n\n    return (\n        <Grid item xs={12} sm={12} >\n            <Paper className={classes.paper}>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n                    <Box flexGrow={1}>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h6\">\n                            Servidores LDAP\n                        </Typography>\n                    </Box>\n                    <IconButton onClick={(e) => { e.preventDefault(); handleClickOpen() }} edge=\"end\" aria-label=\"add\">\n                        <ControlPointIcon />\n                    </IconButton>\n                </Box>\n                <div style={{ width: '100%' }}>\n                    {\n                        servers.length > 0 &&\n                        servers.slice(0, 3).map((server, index) => {\n                            return <ServerLdapItem loadLdapServers={loadLdapServers} showMessage={props.showMessage} key={'server' + index} index={index} server={server} />\n                        })\n                    }\n                </div>\n\n                {\n                    servers.length > 3 &&\n                    <React.Fragment>\n                        <div style={{ width: '100%', display: serversHidden ? 'none' : 'inherit' }}>\n                            {\n                                servers.slice(3, servers.length).map((server, index) => {\n                                    return <ServerLdapItem loadLdapServers={loadLdapServers} showMessage={props.showMessage} key={'server' + index} index={index} server={server} />\n                                })\n                            }\n                        </div>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                            <Button onClick={() => { setServersHidden(!serversHidden) }}>{serversHidden ? 'Ver todos' : 'Volver a ocultar'}</Button>\n                        </Box>\n                    </React.Fragment>\n                }\n            </Paper>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <form onSubmit={handleSubmit}>\n                    <DialogTitle id=\"form-dialog-title\">Registrar Servidor LDAP</DialogTitle>\n                    <DialogContent>\n\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                        }\n\n                        <Box display=\"flex\" style={{ width: '100%' }}>\n                            <Box flexGrow={1} >\n                                <TextField\n                                    onChange={handleChange}\n                                    id=\"ldap-server-host\"\n                                    name=\"host\"\n                                    label=\"IP del servidor\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={newserver.host}\n                                />\n                            </Box>\n                            <Box>\n                                <TextField\n                                    onChange={handleChange}\n                                    id=\"ldap-server-port\"\n                                    name=\"port\"\n                                    label=\"Puerto\"\n                                    type=\"number\"\n                                    defaultValue=\"389\"\n                                    inputProps={{ min: 1, max: 65536 }}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={newserver.port}\n                                />\n                            </Box>\n                        </Box>\n                        <Box style={{ width: '100%', marginTop: '1rem' }}>\n                            <TextField style={{ width: '100%' }}\n                                onChange={handleChange}\n                                id=\"ldap-server-dnbase\"\n                                name=\"dnbase\"\n                                label=\"Dn Base\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={newserver.dnbase}\n                            />\n                        </Box>\n                        <Box style={{ width: '100%', marginTop: '1rem' }}>\n                            <TextField style={{ width: '100%' }}\n                                onChange={handleChange}\n                                id=\"ldap-server-dnuser\"\n                                name=\"dnuser\"\n                                label=\"Dn Usuario\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={newserver.dnuser}\n                            />\n                        </Box>\n                        <Box style={{ width: '100%', marginTop: '1rem' }}>\n                            <TextField style={{ width: '100%' }}\n                                onChange={handleChange}\n                                id=\"ldap-server-password\"\n                                name=\"password\"\n                                label=\"Contraseña\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={newserver.password}\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                        <div className={classes.wrapper}>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ThumbUpAltIcon />}\n                                disabled={loading}\n                            >\n                                Aceptar\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                        <Button\n                            onClick={handleClose}\n                            variant=\"contained\"\n                            color=\"default\"\n                            size=\"small\"\n                            className={classes.button}\n                            startIcon={<CloseIcon />}\n                        >\n                            Cancelar\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ConfirmDialog from \"../dialog/confirm\";\nimport * as Services from \"../../services/services\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    }\n}));\n\nexport default function TelegramChatItem(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteChat(props.chat.id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Usuario ' + props.chat.name + ' eliminado correctamente', 'success')\n                handleClose()\n                props.loadChats();\n            }\n        }).catch((error) => {\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n\n        /*await Services.deleteServer(props.server._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Servidor ' + response.data.host + ' eliminado correctamente', 'success')\n                props.loadServers()\n            }\n        }).catch((error) => {\n            setLoading(false);\n            props.showMessage('No se pudo eliminar el servidor la respuesta fue: ' + error.message, 'error')\n        })*/\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n    };\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={1} bgcolor=\"background.paper\">\n            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                    <PersonIcon fontSize=\"medium\" />\n                </Avatar>\n                <Box display=\"flex\" flexGrow={1} flexDirection='column'>\n                    <Typography color=\"textPrimary\" gutterBottom className={classes.typography}>\n                        {props.chat.name}\n                    </Typography>\n                    <Typography gutterBottom className={classes.typography}>\n                        <em>{props.chat.id}</em>\n                    </Typography>\n                </Box>\n            </Box>\n            <Button onClick={(e) => setOpen(true)} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n                <DeleteOutlineIcon />\n            </Button>\n            <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                <Typography variant=\"h6\" gutterBottom> Esta a punto de eliminar el usuario del bot:</Typography>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                    <Avatar>\n                        <PersonIcon fontSize=\"medium\" />\n                    </Avatar> \n                    <Box display=\"flex\" flexGrow={1} flexDirection='column'>\n                        <Typography gutterBottom className={classes.typography}>\n                            {props.chat.name}\n                        </Typography>\n                        <Typography gutterBottom className={classes.typography}>\n                            {props.chat.id}\n                        </Typography>\n                    </Box>\n                </Box>\n            </ConfirmDialog>\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport * as Services from \"../../services/services\";\nimport TelegramChatItem from \"./telegramchatitem\";\n\nvar validator = require('validator');\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function TelegramChats(props) {\n    const classes = useStyles();\n    const [chats, setChats] = useState(null)\n\n    const [loading, setLoading] = useState(false);\n\n    const [newtelegramchat, setNewTelegramchat] = useState({\n        name: '',\n        id: ''\n    })\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const [open, setOpen] = useState(false);\n\n    const [teleChatsHidden, setTeleChatsHidden] = useState(true)\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setNewTelegramchat({\n            name: '',\n            id: ''\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewTelegramchat(newtelegramchat => ({ ...newtelegramchat, [e.target.name]: e.target.value }));\n    }\n\n    const handleSubmit = async () => {\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        if (validator.isEmpty(newtelegramchat.name, { ignore_whitespace: true })) {\n            setError(error => ({ ...error, show: true, msg: 'El nombre no es válido' }))\n        } else\n            if (validator.isEmpty(newtelegramchat.id, { ignore_whitespace: true })) {\n                setError(error => ({ ...error, show: true, msg: 'El ID no es válido' }))\n            } else {\n                if (!loading) {\n                    setLoading(true);\n                }\n                await Services.registerChat(newtelegramchat.name, newtelegramchat.id)\n                    .then((response) => {\n                        setLoading(false);\n                        if (response.data.errors)\n                            setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                        else {\n                            props.showMessage('Usuario autorizado correctamente!', 'success')\n                            handleClose()\n                            loadChats()\n                        }\n                    }).catch((error) => {\n                        setLoading(false);\n                        setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                    });\n            }\n    }\n\n    const loadChats = async () => {\n        await Services.getBot().then((response) => {\n            if (response.data !== null && response.data.chats !== undefined) {\n                setChats(response.data.chats)\n            } else setChats(null)\n        }).catch((error) => {\n            return\n        })\n    }\n\n    useEffect(() => {\n        loadChats()\n    }, [props.refreshChats]);\n\n    return (\n        <React.Fragment>\n            {\n                chats !== null ?\n                    <Grid item xs={12} sm={12} >\n                        <Paper className={classes.paper}>\n                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n                                <Box flexGrow={1}>\n                                    <Typography color=\"textPrimary\" variant=\"h6\">Autorizados al bot</Typography>\n                                </Box>\n                                <IconButton onClick={(e) => { e.preventDefault(); setOpen(true) }} edge=\"end\" aria-label=\"add\">\n                                    <ControlPointIcon />\n                                </IconButton>\n                            </Box>\n                            <div style={{ width: '100%' }}>\n                                {\n                                    chats.length > 0 &&\n                                    chats.slice(0, 3).map((chat, index) => {\n                                        return <TelegramChatItem loadChats={loadChats} showMessage={props.showMessage} key={'botchat' + index} chat={chat} />\n                                    })\n                                }\n                            </div>\n\n                            {\n                                chats.length > 3 &&\n                                <React.Fragment>\n                                    <div style={{ width: '100%', display: teleChatsHidden ? 'none' : 'inherit' }}>\n                                        {\n                                            chats.slice(3, chats.length).map((chat, index) => {\n                                                return <TelegramChatItem loadChats={loadChats} showMessage={props.showMessage} key={'botchat' + index} chat={chat} />\n                                            })\n                                        }\n                                    </div>\n                                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                                        <Button onClick={() => { setTeleChatsHidden(!teleChatsHidden) }}>{teleChatsHidden ? 'Ver todos' : 'Volver a ocultar'}</Button>\n                                    </Box>\n                                </React.Fragment>\n                            }\n                        </Paper>\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                            <form onSubmit={handleSubmit}>\n                                <DialogTitle id=\"form-dialog-title\">Autorizar usuario al bot</DialogTitle>\n                                <DialogContent>\n\n                                    {\n                                        error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                    }\n\n                                    <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"telegramchat-dnbase\"\n                                            name=\"name\"\n                                            label=\"Nombre\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newtelegramchat.name}\n                                        />\n                                    </Box>\n                                    <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                        <TextField style={{ width: '100%' }}\n                                            onChange={handleChange}\n                                            id=\"telegramchat-dnuser\"\n                                            name=\"id\"\n                                            label=\"ID\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            value={newtelegramchat.id}\n                                        />\n                                    </Box>\n\n                                </DialogContent>\n                                <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                    <div className={classes.wrapper}>\n                                        <Button\n                                            onClick={handleSubmit}\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            size=\"small\"\n                                            className={classes.button}\n                                            startIcon={<ThumbUpAltIcon />}\n                                            disabled={loading}\n                                        >\n                                            Aceptar\n                                        </Button>\n                                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                    </div>\n                                    <Button\n                                        onClick={handleClose}\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<CloseIcon />}\n                                    >\n                                        Cancelar\n                                    </Button>\n                                </DialogActions>\n                            </form>\n                        </Dialog>\n                    </Grid>\n                    : ''\n            }\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport * as Services from '../../services/services'\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nfunction Graphic(props) {\n \n    const parseData = () => {\n        let data = []\n        props.data.map((value) => {\n            let item = { label: value, value: value }\n            if (props.type === 'size')\n                item = { label: Services.getSize(value), value: value }\n            else if (props.type === 'speed')\n                item = { label: Services.getSize(value)+'/s', value: value }\n            data.push(item)\n            return value\n        })\n        return data\n    }\n\n    const CustomTooltip = (options) => {\n        if (options.active && options.payload && options.payload.length) {\n            return (\n                <div style={{ backgroundColor: 'rgba(255,255,255,.15)', borderRadius: '0.5rem' }}>\n                    <p className=\"label fs-6\" style={{ padding: '5px' }}>{`${options.label}`}</p>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className=\"chart mt-2\" style={{ height: props.graphicheight + 'px' }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart width={300} height={100} data={parseData()}>\n                    <Tooltip content={<CustomTooltip />} />\n                    <YAxis hide={true} />\n                    <XAxis dataKey=\"label\" hide={true} />\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#dc3545\" strokeWidth={2} />\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default Graphic;","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\nimport Graphic from '../graphic/graphic'\nimport * as Services from '../../services/services'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(0),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    listTextprimary: {\n        fontSize: '1.25rem',\n        fontWeight: '700'\n    }\n}));\n\nexport default function ResumeItem(props) {\n    const classes = useStyles();\n\n    const getText = () => {\n        let text = props.data.length > 0 ? props.data[props.data.length - 1] : 0\n        if (props.type === 'size')\n            text = Services.getSize(text)\n        else if (props.type === 'speed')\n            text = Services.getSize(text) + '/s'\n        return text\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.demo}>\n                <List >\n                    <ListItem>\n                        <ListItemText className={classes.listTextprimary}\n                            primary={getText()} secondary={props.text}\n                            primaryTypographyProps={{style: {fontSize:'1.5rem', color: props.prefersDarkMode ? '#fff' : '#212529'}}}\n                            secondaryTypographyProps={{style: {fontSize:'1.5rem', color: props.prefersDarkMode ? 'inherit' : 'gray'}}}\n                        />\n                        <ListItemSecondaryAction>\n                            { props.icon }\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </div>\n            <Container>\n                <Graphic type={props.type} data={props.data} id={props.graphicid} graphicheight={80} />\n            </Container>\n        </Paper>\n\n    );\n}\n","import React from 'react'\nimport ResumeItem from './resumeitem';\nimport Grid from '@material-ui/core/Grid';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nexport default function Resume(props) {\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={3}>\n                <ResumeItem prefersDarkMode={props.prefersDarkMode} data={props.usersConnected !== undefined ? props.usersConnected : []} type='connected' graphicid=\"chart-connected\" value='23' text='Conectados' icon={<PeopleIcon style={{ fontSize: 40 }} />} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n                <ResumeItem prefersDarkMode={props.prefersDarkMode} data={props.usersConnections !== undefined ? props.usersConnections : []} type='connections' graphicid=\"chart-connections\" value='50' text='Conexiones' icon={<LinkIcon style={{ fontSize: 40 }} />} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n                <ResumeItem prefersDarkMode={props.prefersDarkMode} data={props.usersSize !== undefined ? props.usersSize : []} type='size' graphicid=\"chart-size\" value='302MB' text='Tamaño' icon={<GetAppIcon style={{ fontSize: 40 }} />} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n                <ResumeItem prefersDarkMode={props.prefersDarkMode} data={props.usersSpeed !== undefined ? props.usersSpeed : []} type='speed' graphicid=\"chart-speed\" value='475KB/s' text='Velocidad' icon={<ImportExportIcon style={{ fontSize: 40 }} />} subvalue='-55%' />\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport Moment from 'react-moment';\nimport 'moment/locale/es';\n\nimport * as Services from \"../../services/services\"\nimport ConfirmDialog from \"../dialog/confirm\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    }\n}));\n\nexport default function LockedSource(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleUnlockClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.sourceUnlock(props.sourcelock.identifier, props.server.host).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Se realizó el desbloqueo correctamente', 'success')\n                handleClose()\n                props.refreshSourcesLock(props.sourcelock.identifier)\n            }\n        }).catch((error) => {\n            setLoading(false);\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n    };\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={1} bgcolor=\"background.paper\">\n            <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                    {\n                        Services.isIPAddress(props.sourcelock.identifier) ?\n                            <DesktopWindowsIcon fontSize=\"medium\" /> :\n                            <PersonIcon fontSize=\"medium\" />\n                    }\n                </Avatar>\n                <Box display=\"flex\" flexGrow={1} flexDirection='column'>\n                    <Typography color=\"textPrimary\" gutterBottom className={classes.typography} display='flex'>\n                        {Services.isIPAddress(props.sourcelock.identifier) ? props.sourcelock.identifier : Services.parseSource(props.sourcelock.identifier)} <small className={classes.small}><em style={{ margin: '5px' }}>{props.sourcelock.lock_from ===  'file' ? 'archivo' : props.sourcelock.lock_from}</em></small>\n                    </Typography>\n                    <Typography gutterBottom className={classes.typography}>\n                    <em><Moment locale=\"es\" fromNow>{props.sourcelock.lock_date}</Moment></em>\n                    </Typography>\n                </Box>\n            </Box>\n            <Button onClick={(e) => { e.preventDefault(); setOpen(true) }} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n                <LockOpenIcon />\n            </Button>\n\n            <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleUnlockClick} >\n                <Typography variant=\"h6\" gutterBottom> Esta a punto de desbloquear:</Typography>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                    <Avatar>\n                        {\n                            Services.isIPAddress(props.sourcelock.identifier) ?\n                                <DesktopWindowsIcon fontSize=\"medium\" /> :\n                                <PersonIcon fontSize=\"medium\" />\n                        }\n                    </Avatar>\n                    <Box display=\"flex\" flexGrow={1} flexDirection='column'>\n                        <Typography gutterBottom className={classes.typography} display='flex'>\n                            {Services.isIPAddress(props.sourcelock.identifier) ? props.sourcelock.identifier : Services.parseSource(props.sourcelock.identifier)} <small className={classes.small}><em style={{ margin: '5px' }}>{props.sourcelock.lock_from ===  'file' ? 'archivo' : props.sourcelock.lock_from}</em></small>\n                        </Typography>\n                        <Typography gutterBottom className={classes.typography}>\n                        <em><Moment locale=\"es\" fromNow>{props.sourcelock.lock_date}</Moment></em>\n                        </Typography>\n                    </Box>\n                </Box>\n            </ConfirmDialog>\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport 'moment/locale/es';\nimport * as Services from \"../../services/services\"\nimport LockedSource from \"./lockedsource\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px'\n    },\n    small: {\n        background: '#dc3545',\n        borderRadius: '15px',\n        color: 'white'\n    }\n}));\n\nexport default function LockedSources(props) {\n    const classes = useStyles();\n    const [sourcesLocked, setSourcesLocked] = useState(null)\n\n    const [sourcesLockedHidden, setSourcesLockedHidden] = useState(true)\n\n    const refreshSourcesLock = (source) => {\n        setSourcesLocked(sourcesLocked.filter(function (element) { return element.identifier !== source }))\n    }\n\n    const loadSourceslock = async () => {\n        await Services.getSourcesLocked(props.server._id).then((response) => {\n            if (!response.data.errors) {\n                setSourcesLocked(response.data)\n            }\n        }).catch((error) => {\n            return\n        })\n    }\n\n    useEffect(() => {\n        async function getSourcesLocked() {\n            await Services.getSourcesLocked(props.server._id).then((response) => {\n                console.log(response.data)\n                if (!response.data.errors) {\n                    setSourcesLocked(response.data)\n                }\n            }).catch((error) => {\n                return\n            })\n        }\n        getSourcesLocked();\n    }, [props.refreshSourcesLock, props.server._id]);\n\n    return (\n        <React.Fragment>\n            {\n                sourcesLocked !== null && sourcesLocked.length > 0 && props.server !== {} ?\n                    <Grid item xs={12} sm={12} >\n                        <Paper className={classes.paper}>\n                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n                                <Box flexGrow={1}>\n                                    <Typography color=\"textPrimary\" variant=\"h6\">\n                                        Bloqueados\n                                    </Typography>\n                                </Box>\n                                <Box>\n                                    <Typography >\n                                        <Badge badgeContent={sourcesLocked.length} color=\"primary\" />\n                                    </Typography>\n                                </Box>\n                            </Box>\n\n                            <div style={{ width: '100%' }}>\n                                {\n                                    sourcesLocked.length > 0 &&\n                                    sourcesLocked.slice(0, 3).map((sourcelock, index) => {\n                                        return <LockedSource refreshSourcesLock={refreshSourcesLock} loadSourceslock={loadSourceslock} showMessage={props.showMessage} key={'server' + index} sourcelock={sourcelock} server={props.server} />\n                                    })\n                                }\n                            </div>\n                            {\n                                sourcesLocked.length > 3 &&\n                                <React.Fragment>\n                                    <div style={{ width: '100%', display: sourcesLockedHidden ? 'none' : 'inherit' }}>\n                                        {\n                                            sourcesLocked.slice(3, sourcesLocked.length).map((sourcelock, index) => {\n                                                return <LockedSource refreshSourcesLock={refreshSourcesLock} loadSourceslock={loadSourceslock} showMessage={props.showMessage} key={'server' + index} sourcelock={sourcelock} server={props.server} />\n                                            })\n                                        }\n                                    </div>\n                                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                                        <Button onClick={() => { setSourcesLockedHidden(!sourcesLockedHidden) }}>{sourcesLockedHidden ? 'Ver todos' : 'Volver a ocultar'}</Button>\n                                    </Box>\n                                </React.Fragment>\n                            }\n\n\n                        </Paper>\n                    </Grid>\n                    : ''\n            }\n        </React.Fragment>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Badge from '@material-ui/core/Badge';\nimport GroupIcon from '@material-ui/icons/Group';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport SpeedOutlinedIcon from '@material-ui/icons/SpeedOutlined';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport * as Services from \"../../services/services\"\nimport ConfirmDialog from \"../dialog/confirm\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px',\n        display: 'flex'\n    }\n}));\n\nexport default function Quota(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleRemoveClick = async () => {\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.deleteQuota(props.quota._id).then((response) => {\n            setLoading(false);\n            if (response.data.errors)\n                props.showMessage(response.data.errors[0].msg, 'error')\n            else {\n                props.showMessage('Cuota eliminada correctamente', 'success')\n                handleClose()\n                props.loadQuotas();\n            }\n        }).catch((error) => {\n            setLoading(false);\n            props.showMessage('Lo sentimos ha ocurrido un error inesperado.', 'error')\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setLoading(false);\n    };\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" p={1} bgcolor=\"background.paper\">\n            <Box id={'server' + props.index} key={'server' + props.index} display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                <Avatar>\n                    <SpeedOutlinedIcon fontSize=\"medium\" />\n                </Avatar>\n                <Box display=\"flex\" flexGrow={10} flexDirection='column'>\n                    <Typography color=\"textPrimary\" gutterBottom className={classes.typography}>\n                        {Services.getSize(props.quota.limit)} {props.quota.isdefault ? <CheckCircleIcon /> : ''}\n                    </Typography>\n\n                    <Typography gutterBottom className={classes.typography}>\n                    <em>{Services.convertQuotaType(props.quota.type)}</em>\n                    </Typography>\n                </Box>\n            </Box>\n            <Box display=\"flex\" >\n                <Badge badgeContent={props.quota.sources.length} max={9} color=\"primary\">\n                    <GroupIcon fontSize=\"large\" />\n                </Badge>\n                <Button onClick={(e) => setOpen(true)} variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button} style={{ marginLeft: '25px' }}>\n                    <DeleteOutlineIcon />\n                </Button>\n            </Box>\n            <ConfirmDialog open={open} loading={loading} handleClose={handleClose} handleConfirmClick={handleRemoveClick} >\n                <Typography variant=\"h6\" gutterBottom> Está a punto de eliminar esta cuota:</Typography>\n                <Box display=\"flex\" alignItems=\"center\" flexGrow={1} >\n                    <Avatar>\n                        <SpeedOutlinedIcon fontSize=\"medium\" />\n                    </Avatar>\n                    <Box display=\"flex\" flexGrow={10} flexDirection='column'>\n                        <Typography gutterBottom className={classes.typography}>\n                            {Services.getSize(props.quota.limit)} {props.quota.isdefault ? <CheckCircleIcon /> : ''}\n                        </Typography>\n\n                        <Typography gutterBottom className={classes.typography}>\n                          <em> {Services.convertQuotaType(props.quota.type)}</em>\n                        </Typography>\n                    </Box>\n                </Box>\n            </ConfirmDialog>\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport SpeedOutlinedIcon from '@material-ui/icons/SpeedOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport * as Services from \"../../services/services\"\nimport Quota from \"./quota\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        borderRadius: '1rem'\n    },\n    button: {\n        margin: '0',\n        minWidth: '0'\n    },\n    typography: {\n        marginBottom: '0',\n        marginLeft: '10px',\n        display: 'flex'\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }\n}));\n\nexport default function Quotas(props) {\n    const classes = useStyles();\n    const [quotas, setQuotas] = useState(null)\n\n    const [loading, setLoading] = useState(false);\n\n    const [newquota, setNewQuota] = useState({\n        limit: '1',\n        limittype: 'GB',\n        type: 'monthly'\n    })\n    const [defaulquota, setDefaultQuota] = useState('nodefault')\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const [open, setOpen] = useState(false);\n\n    const [openquotadialog, setOpenQuotaDialog] = useState(false);\n\n    const [quotasHidden, setQuotasHidden] = useState(true)\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setNewQuota({\n            limit: '1',\n            limittype: 'GB',\n            type: 'monthly'\n        })\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n    const handleCloseQuotaDialog = () => {\n        setOpenQuotaDialog(false);\n\n        setDefaultQuota('nodefault')\n\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setNewQuota(newquota => ({ ...newquota, [e.target.name]: e.target.value }));\n    }\n    const handleChangeQuotaDialog = (e) => {\n        e.preventDefault()\n        setDefaultQuota(e.target.value);\n    }\n\n    const handleSubmitQuotaDialog = async () => {\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        if (!loading) {\n            setLoading(true);\n        }\n        await Services.setDefaultQuota({ quotaid: defaulquota })\n            .then((response) => {\n                setLoading(false);\n                if (response.data.errors)\n                    setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                else {\n                    if (response.data.status !== \"nothingtodo\") {\n                        props.showMessage(response.data.msg, 'success')\n                        handleCloseQuotaDialog()\n                        loadQuotas()\n                    } else\n                        setError(error => ({ ...error, show: true, msg: 'Seleccione una cuota de la lista' }))\n                }\n            }).catch((error) => {\n                setLoading(false);\n                setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n            });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n        if (Number(newquota.limit) < 1) {\n            setError(error => ({ ...error, show: true, msg: 'El límite no es válido' }))\n        } else {\n            if (!loading) {\n                setLoading(true);\n            }\n            await Services.registerQuota({ limit: Services.getBytes(Number(newquota.limit), newquota.limittype), type: newquota.type })\n                .then((response) => {\n                    setLoading(false);\n                    if (response.data.errors)\n                        setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                    else {\n                        props.showMessage('Cuota registrada correctamente!', 'success')\n                        handleClose()\n                        loadQuotas()\n                    }\n                }).catch((error) => {\n                    setLoading(false);\n                    setError(error => ({ ...error, show: true, msg: 'Lo sentimos ha ocurrido un error inesperado.' }))\n                });\n        }\n    }\n\n    const loadQuotas = async () => {\n        await Services.getQuotas().then((response) => {\n            console.log(response.data);\n            if (!response.data.errors) {\n                setQuotas(response.data)\n            }\n        }).catch((error) => {\n            return\n        })\n    }\n\n    useEffect(() => {\n        loadQuotas()\n    }, [props.refreshQuota]);\n\n    return (\n\n        <React.Fragment>\n            {\n                quotas !== null ?\n                    <Grid item xs={12} sm={12} >\n                        <Paper className={classes.paper}>\n                            <Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\n                                <Box flexGrow={1}>\n                                    <Typography color=\"textPrimary\" variant=\"h6\">Cuotas</Typography>\n                                </Box>\n                                <IconButton onClick={(e) => { e.preventDefault(); setOpen(true) }} edge=\"end\" aria-label=\"add\">\n                                    <ControlPointIcon />\n                                </IconButton>\n                                <IconButton onClick={(e) => { e.preventDefault(); setOpenQuotaDialog(true) }} edge=\"end\" aria-label=\"add\">\n                                    <SpeedOutlinedIcon />\n                                </IconButton>\n                            </Box>\n                            <div style={{ width: '100%' }}>\n                                {\n                                    quotas.length > 0 &&\n                                    quotas.slice(0, 3).map((quota, index) => {\n                                        return <Quota key={'quota' + index} loadQuotas={loadQuotas} showMessage={props.showMessage} quota={quota} />\n                                    })\n                                }\n                            </div>\n\n                            {\n                                quotas.length > 3 &&\n                                <React.Fragment>\n                                    <div style={{ width: '100%', display: quotasHidden ? 'none' : 'inherit' }}>\n                                        {\n                                            quotas.slice(3, quotas.length).map((quota, index) => {\n                                                return <Quota key={'quota' + index} loadQuotas={loadQuotas} showMessage={props.showMessage} quota={quota} />\n                                            })\n                                        }\n                                    </div>\n                                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                                        <Button onClick={() => { setQuotasHidden(!quotasHidden) }}>{quotasHidden ? 'Ver todos' : 'Volver a ocultar'}</Button>\n                                    </Box>\n                                </React.Fragment>\n                            }\n                        </Paper>\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                            <form onSubmit={handleSubmit}>\n                                <DialogTitle id=\"form-dialog-title\">Registrar Quota</DialogTitle>\n                                <DialogContent>\n                                    {\n                                        error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                    }\n\n                                    <Box display=\"flex\" style={{ width: '100%' }}>\n                                        <Box flexGrow={1} >\n                                            <TextField style={{ width: '100%' }}\n                                                onChange={handleChange}\n                                                id=\"quota-limit\"\n                                                name=\"limit\"\n                                                label=\"Limite\"\n                                                variant=\"outlined\"\n                                                size=\"small\"\n                                                type=\"number\"\n                                                defaultValue={newquota.limit}\n                                                value={newquota.limit}\n                                                inputProps={{ min: 1 }}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </Box>\n                                        <Box>\n                                            <FormControl size=\"small\" variant=\"outlined\">\n                                                <InputLabel htmlFor=\"quota-limit-type\">Medida</InputLabel>\n                                                <Select\n                                                    onChange={handleChange}\n                                                    native\n                                                    label=\"Medida\"\n                                                    defaultValue={newquota.limittype}\n                                                    inputProps={{\n                                                        name: 'limittype',\n                                                        id: 'quota-limit-type',\n                                                        value: newquota.limittype\n                                                    }}\n                                                >\n                                                    <option value={'TB'}>TB</option>\n                                                    <option value={'GB'}>GB</option>\n                                                    <option value={'MB'}>MB</option>\n                                                    <option value={'KB'}>KB</option>\n                                                </Select>\n                                            </FormControl>\n                                        </Box>\n                                    </Box>\n                                    <Box style={{ width: '100%', marginTop: '1rem' }}>\n                                        <FormControl size=\"small\" variant=\"outlined\" style={{ width: '100%' }}>\n                                            <InputLabel htmlFor=\"quota-type\">Tipo de Cuota</InputLabel>\n                                            <Select style={{ width: '100%' }}\n                                                onChange={handleChange}\n                                                native\n                                                label=\"Tipo de Cuota\"\n                                                defaultValue={newquota.type}\n                                                value={newquota.type}\n                                                inputProps={{\n                                                    name: 'type',\n                                                    id: 'quota-type',\n                                                    value: newquota.type\n                                                }}\n                                            >\n                                                <option value={'monthly'}>Mensual</option>\n                                                <option value={'weekly'}>Semanal</option>\n                                                <option value={'daily'}>Diario</option>\n                                                <option value={'hourly'}>Cada hora</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Box>\n                                </DialogContent>\n                                <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                    <div className={classes.wrapper}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            size=\"small\"\n                                            className={classes.button}\n                                            startIcon={<ThumbUpAltIcon />}\n                                            disabled={loading}\n                                        >\n                                            Aceptar\n                                        </Button>\n                                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                    </div>\n                                    <Button\n                                        onClick={handleClose}\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<CloseIcon />}\n                                    >\n                                        Cancelar\n                                    </Button>\n                                </DialogActions>\n                            </form>\n                        </Dialog>\n                        <Dialog open={openquotadialog} onClose={handleCloseQuotaDialog} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Establecer cuota por defecto</DialogTitle>\n                            <DialogContent>\n                                {\n                                    error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginBottom: '1rem' }}>{error.msg}</Alert>\n                                }\n\n                                {\n                                    quotas.map((value, index) => {\n                                        if (value.isdefault) {\n                                            return <Box style={{ width: '100%', textAlign: 'left', marginBottom: '1rem' }}><small>\n                                                <em>Actualmente ya tiene la cuota <b>{Services.getSize(value.limit) + ' - ' + Services.convertQuotaType(value.type)}</b> establecida como cuota por defecto. Seleccione la opción \"Sin cuota por defecto\" si lo que desea es eliminarla.</em>\n                                            </small>\n                                            </Box>\n                                        }\n                                        return ''\n                                    })\n                                }\n\n                                <Box style={{ width: '100%' }}>\n                                    <FormControl size=\"small\" variant=\"outlined\" style={{ width: '100%' }}>\n                                        <InputLabel htmlFor=\"set-default-quota\">Tipo de Cuota</InputLabel>\n                                        <Select style={{ width: '100%' }}\n                                            onChange={handleChangeQuotaDialog}\n                                            native\n                                            label=\"Tipo de Cuota\"\n                                            inputProps={{\n                                                name: 'limittype',\n                                                id: 'set-default-quota',\n                                                vale: defaulquota\n                                            }}\n                                        >\n                                            <option value=\"nodefault\">Sin cuota por defecto</option>\n                                            {\n                                                quotas !== null && !quotas.errors ?\n                                                    quotas.map((quota, index) => {\n                                                        return <option value={quota._id}>{Services.getSize(quota.limit) + ' - ' + Services.convertQuotaType(quota.type)}</option>\n                                                    })\n                                                    : ''\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Box>\n\n                            </DialogContent>\n                            <DialogActions style={{ justifyContent: 'center', marginBottom: '0.5rem' }}>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={handleSubmitQuotaDialog}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<ThumbUpAltIcon />}\n                                        disabled={loading}\n                                    >\n                                        Aceptar\n                                    </Button>\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </div>\n                                <Button\n                                    onClick={handleCloseQuotaDialog}\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    startIcon={<CloseIcon />}\n                                >\n                                    Cancelar\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                    : ''\n\n            }\n\n        </React.Fragment>\n    );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport logo from '../logo/favicon.png';\nimport * as Services from '../../services/services'\nimport './license.css'\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%'\n    },\n    card: {\n        width: '100%',\n        maxWidth: '50rem',\n        alignItems: 'center',\n    },\n    cardcontent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    }\n});\n\nexport default function License(props) {\n    const classes = useStyles();\n    const [license, setLicense] = useState('')\n    let formLicense = useRef(null);\n\n    const handleFileChange = (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append('licensefile', e.target.files[0])\n        Services.uploadLicenseFile(formData).then(async (response) => {\n            if (response.data.errors) {\n                props.showMessage(response.data.errors[0].msg, 'error')\n            }\n            else {\n                props.showMessage('Licencia para ' + response.data.company + ' válida por: ' + response.data.time + ' días ', 'success')\n                await Services.getConnectionsData()\n            }\n            if (formLicense.current)\n                formLicense.current.reset()\n        })\n    }\n\n    useEffect(() => {\n        async function getEncryptSystemData() {\n            await Services.getEncryptSystemData().then((response) => {\n                setLicense(response.data.license)\n            }).catch((error) => {\n                return\n            })\n        }\n        getEncryptSystemData();\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <form ref={formLicense}>\n                <Card className={classes.card}>\n                    <CardContent className={classes.cardcontent}>\n                        <Avatar style={{ width: '70px', height: '70px', marginBottom: '15px' }} alt=\"logo\" src={logo} />\n\n                        <Typography\n                            style={{ minWidth: '100%', marginBottom: '15px', textAlign: 'justify' }}\n                        >\n                            Lo sentimos necesita un archivo de licencia para usar el sistema,\n                            para obtener una licencia copie el siguiente código y envíelo a los proveedores del sistema.\n                        </Typography>\n\n                        <TextField\n                            style={{ minWidth: '100%', marginBottom: '15px' }}\n                            multiline\n                            rows={15}\n                            defaultValue={license}\n                            variant=\"outlined\"\n                            inputProps={{ readonly: 'readonly' }}\n                        />\n\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            component=\"label\"\n                        >\n                            Cargar archivo de licencia\n                            <input onChange={(e) => { handleFileChange(e) }}\n                                type=\"file\"\n                                hidden\n                            />\n                        </Button>\n                    </CardContent>\n                </Card>\n            </form>\n        </div>\n\n    );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport logo from '../logo/favicon.png';\nimport * as Services from '../../services/services'\nimport Button from '@material-ui/core/Button';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport Alert from '@material-ui/lab/Alert';\nimport './login.css'\n\nconst validator = require('validator')\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%'\n    },\n    card: {\n        width: '100%',\n        maxWidth: '50rem',\n        alignItems: 'center',\n    },\n    cardcontent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '1rem'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    }\n});\n\nexport default function Login(props) {\n    const classes = useStyles();\n    let formLogin = useRef(null);\n\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const [error, setError] = useState({\n        show: false,\n        type: 'error',\n        msg: ''\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setError({\n            show: false,\n            type: 'error',\n            msg: ''\n        })\n\n        if (validator.isEmpty(username, { ignore_whitespace: true })) {\n            setError(true)\n        } else if (validator.isEmpty(password, { ignore_whitespace: true })) {\n            setError(true)\n        } else {\n            await Services.login({\n                username: username,\n                password: password\n            }).then((response) => {\n                if (response.data.errors) {\n                    setError(error => ({ ...error, show: true, msg: response.data.errors[0].msg }))\n                } else {\n                    props.setToken(response.data)\n                }\n            }).catch((err) => {\n                setError(error => ({ ...error, show: true, msg: \"Lo sentimos ha ocurrido un error inesperado.\" }))\n            })\n        }\n    }\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Avatar style={{ width: '70px', height: '70px', marginBottom: '2rem' }} alt=\"logo\" src={logo} />\n\n            <form ref={formLogin} style={{ width: '19rem' }} onSubmit={handleSubmit}>\n\n                <Card className={classes.card}>\n                    <CardContent className={classes.cardcontent}>\n\n                        <Typography\n                            style={{ marginTop: '1rem' }}\n                        >\n                            Autenticación requerida\n                        </Typography>\n\n                        {\n                            error.show && <Alert variant=\"outlined\" severity={error.type} style={{ marginTop: '1rem', marginBottom: '1rem', width: '100%' }}>{ error.msg }</Alert>\n                        }\n\n                        <TextField style={{ width: '100%', marginBottom: '15px' }}\n                            required\n                            label=\"Usuario\"\n                            onChange={(e) => { setUserName(e.target.value) }}\n                        />\n\n                        <TextField style={{ width: '100%', marginBottom: '15px' }}\n                            required\n                            type=\"password\"\n                            label=\"Contraseña\"\n                            onChange={(e) => { setPassword(e.target.value) }}\n                        />\n\n                        <Button style={{ marginTop: '1.5rem' }}\n                            type='submit'\n                            color=\"secondary\"\n                            startIcon={<ThumbUpAltIcon />}\n                            variant=\"contained\">\n                            Entrar\n                        </Button>\n\n                    </CardContent>\n                </Card>\n            </form>\n        </div>\n\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport socketIOClient from \"socket.io-client\";\nimport { useSnackbar } from 'notistack';\nimport Header from './components/header/header'\nimport Sidebar from './components/sidebar/sidebar'\nimport Content from './components/content/content'\nimport ServerItems from './components/serveritems/serveritems'\nimport ServerLdapItems from './components/serverldapitems/serverldapitems'\nimport TelegramChats from \"./components/telegramchats/telegramchats\";\nimport Resume from './components/resume/resume'\nimport ServerOptions from './components/serveroptions/serveroptions'\nimport LockedSources from \"./components/lockedsources/lockedsources\"\nimport Quotas from \"./components/quotas/quotas\"\nimport License from \"./components/license/license\"\nimport Login from \"./components/login/login\"\nimport * as Services from \"./services/services\"\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee, faSyncAlt, faCheck, faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons'\nimport useToken from './hooks/useToken';\n\nlibrary.add(fab, faCheckSquare, faCoffee, faSyncAlt, faCheck, faArrowDown, faArrowUp)\n\nconst drawerWidth = 230;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('md')]: {\n      flexGrow: 1,\n    },\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  small: {\n    background: '#dc3545',\n    borderRadius: '15px',\n    color: 'white'\n  }\n}));\n\nconst socket = socketIOClient(process.env.REACT_APP_ENDPOINT);\n\nexport default function App(props) {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  //const queryPrefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [prefersDarkMode, setPrefersDarkMode] = useState(true);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            light: '#757ce8',\n            main: '#dc3545', //'#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n          },\n          secondary: {\n            light: '#ff7961', //focus\n            main: '#dc3545', //background\n            dark: '#ba000d', //hover\n            contrastText: '#fff', // color\n          },\n          text: {\n            secondary: '#9FA2A5'\n          },\n          background: {\n            paper: prefersDarkMode ? '#343A40' : '#fff',\n            default: prefersDarkMode ? '#212529' : '#e9ecef', //#fafafa\n            grouprow: prefersDarkMode ? '#495057' : '#F5F5F5'\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n  const { window } = props;\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const [response, setResponse] = useState({});\n  const [refreshSourcesLock, setRefreshSourcesLock] = useState(false);\n  const [refreshQuota, setRefreshQuota] = useState(false);\n  const [refreshChats, setRefreshChats] = useState(false);\n  const [license, setLicense] = useState({ status: undefined, timeleft: 0, company: '' });\n\n  const { token, setToken } = useToken();\n\n  const showMessage = (msg, variant) => {\n    const action = key => (\n      <React.Fragment>\n        <ThemeProvider theme={theme}>\n          <IconButton onClick={() => { closeSnackbar(key) }} edge=\"end\" aria-label=\"delete\" style={{ marginRight: '3px' }}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n    enqueueSnackbar(msg, {\n      variant: variant,\n      autoHideDuration: 3000,\n      action\n    })\n  }\n\n  const handleRefreshSourcesLock = async () => {\n    setRefreshSourcesLock(!refreshSourcesLock)\n  }\n\n  const handleRefreshQuota = async () => {\n    setRefreshQuota(!refreshQuota)\n  }\n\n  const handleRefreshChats = async () => {\n    setRefreshChats(!refreshChats)\n  }\n\n  const handlePrefersDarkMode = async () => {\n    await Services.updateConfig({ darktheme: !prefersDarkMode }).then((response) => {\n      setPrefersDarkMode(response.data.darktheme)\n    }).catch((error) => {\n      return\n    })\n  }\n\n  useEffect(() => {\n    socket.on(\"proxyConnections\", data => {\n      console.log(data)\n      setResponse(data)\n    });\n\n    socket.on(\"refreshSourcesLock\", data => {\n      setRefreshSourcesLock(refreshSourcesLock => ({ ...refreshSourcesLock, refreshSourcesLock: !refreshSourcesLock }))\n    });\n\n    socket.on(\"updateLicense\", data => {\n      setLicense(data.license)\n    });\n\n    async function getThemePrefers() {\n      await Services.getThemePrefers().then((response) => {\n        setPrefersDarkMode(response.data.darktheme)\n      }).catch((error) => {\n        return\n      })\n    }\n    getThemePrefers();\n\n    async function getConnectionsData() {\n      await Services.getConnectionsData()\n    }\n    getConnectionsData();\n\n  }, []);\n\n  if (license.status !== undefined && !license.status) {\n    return <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <License showMessage={showMessage} />\n    </ThemeProvider>\n  } else if (!token) {\n    return <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Login showMessage={showMessage} setToken={setToken} prefersDarkMode={prefersDarkMode} />\n    </ThemeProvider>\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          handleRefreshSourcesLock={handleRefreshSourcesLock}\n          showMessage={showMessage}\n          handlePrefersDarkMode={handlePrefersDarkMode}\n          prefersDarkMode={prefersDarkMode}\n          handleDrawerToggle={handleDrawerToggle}\n          drawerWidth={drawerWidth}\n          socket={socket}\n          server={response.server}\n          serverIsUp={response.connections !== undefined && response.connections[0] !== undefined && response.connections[0].errors ? false : true}\n          license={license}\n          setToken={setToken}\n        />\n        <Sidebar showMessage={showMessage} handleRefreshChats={handleRefreshChats} mobileOpen={mobileOpen} prefersDarkMode={prefersDarkMode} handleDrawerToggle={handleDrawerToggle} container={container} connections={response.connections !== undefined && response.connections[0] !== undefined && !response.connections[0].errors ? response.connections : []} server={response.server !== undefined ? response.server : {}} />\n        <main className={classes.content} >\n          <div className={classes.toolbar} />\n          {\n            response.server !== undefined ?\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Hidden mdUp implementation=\"css\">\n                    {\n                      response.server !== undefined ? <ServerOptions handleRefreshSourcesLock={handleRefreshSourcesLock} showMessage={showMessage} server={response.server} serverIsUp={response.connections[0] !== undefined && response.connections[0].errors ? false : true} prefersDarkMode={prefersDarkMode} /> : ''\n                    }\n                  </Hidden>\n                </Grid>\n              </Grid>\n              : ''\n          }\n          {<Resume\n            usersConnected={response.usersConnected}\n            usersConnections={response.usersConnections}\n            usersSize={response.usersSize}\n            usersSpeed={response.usersSpeed}\n            prefersDarkMode={prefersDarkMode}\n          />}\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={9}>\n              <Content showMessage={showMessage} handleRefreshQuota={handleRefreshQuota} handleRefreshSourcesLock={handleRefreshSourcesLock} usersConnected={response.usersConnected !== undefined ? response.usersConnected[response.usersConnected.length - 1] : 0} data={response.connections !== undefined && response.connections[0] !== undefined && !response.connections[0].errors ? response.connections : []} server={response.server !== undefined ? response.server : {}} />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Grid container spacing={2}>\n\n                <ServerItems showMessage={showMessage} server={response.server !== undefined ? response.server : {}} />\n\n                <ServerLdapItems showMessage={showMessage} server={response.server !== undefined ? response.server : {}} />\n\n                <Quotas refreshQuota={refreshQuota} showMessage={showMessage} />\n\n                {\n                  response.server !== undefined ?\n                    < LockedSources showMessage={showMessage} refreshSourcesLock={refreshSourcesLock} server={response.server} />\n                    : ''\n                }\n\n                <TelegramChats showMessage={showMessage} refreshChats={refreshChats} />\n\n              </Grid>\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nApp.propTypes = {\n  window: PropTypes.func,\n};\n\n\n","import { useState } from 'react';\n\nexport default function useToken() {\n\n    const getToken = () => {\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        sessionStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { SnackbarProvider } from 'notistack'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider maxSnack={5}>\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}